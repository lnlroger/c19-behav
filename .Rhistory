geom_line() +
ylim(0, 100) +
facet_wrap(~Country, ncol = 4) +
theme_bw() +
theme(legend.position = "none")
rm(df.plot.ts.gantt,countries.to.plot)
# ARDL ----
df.ARDL <- df.use %>%
group_by(Country) %>%
mutate(diff.Movement = c(NA, diff(Movement)),
diff.StringencyIndex = c(NA, diff(StringencyIndex))) %>%
dplyr::select(Country, Date, diff.Movement, diff.StringencyIndex) %>%
drop_na()
lr.coeffs <- data.frame(Country = unique(df.ARDL$Country),
LongRunCoeff = NA)
models.ardl <- list()
# Prepare data
for (ctry in unique(df.ARDL$Country)) {
df.now <- df.ARDL %>%
filter(Country == ctry)
# Run estimation
p.ardl <- 0 # Lags of independent variable
q.ardl <- 0 # Autoregressive lags
model.ardl <- ardlDlm(formula = diff.Movement ~ diff.StringencyIndex,
data = df.now,
p = p.ardl , q = q.ardl)
# Long run parameter
lr.coefficient.ardl <- sum(model.ardl$model$coefficients[2:5]) /
(1-sum(model.ardl$model$coefficients[6:8]))
lr.coeffs$LongRunCoeff[which(lr.coeffs$Country == ctry)] <- lr.coefficient.ardl
models.ardl[[ctry]] <- model.ardl
}
rm(df.now, df.ARDL, model.ardl, ctry, lr.coefficient.ardl,p.ardl,q.ardl)
# Prepare data
for (ctry in unique(df.ARDL$Country)) {
df.now <- df.ARDL %>%
filter(Country == ctry)
# Run estimation
p.ardl <- 0 # Lags of independent variable
q.ardl <- 1 # Autoregressive lags
model.ardl <- ardlDlm(formula = diff.Movement ~ diff.StringencyIndex,
data = df.now,
p = p.ardl , q = q.ardl)
# Long run parameter
lr.coefficient.ardl <- sum(model.ardl$model$coefficients[2:5]) /
(1-sum(model.ardl$model$coefficients[6:8]))
lr.coeffs$LongRunCoeff[which(lr.coeffs$Country == ctry)] <- lr.coefficient.ardl
models.ardl[[ctry]] <- model.ardl
}
# ARDL ----
df.ARDL <- df.use %>%
group_by(Country) %>%
mutate(diff.Movement = c(NA, diff(Movement)),
diff.StringencyIndex = c(NA, diff(StringencyIndex))) %>%
dplyr::select(Country, Date, diff.Movement, diff.StringencyIndex) %>%
drop_na()
lr.coeffs <- data.frame(Country = unique(df.ARDL$Country),
LongRunCoeff = NA)
models.ardl <- list()
# Prepare data
for (ctry in unique(df.ARDL$Country)) {
df.now <- df.ARDL %>%
filter(Country == ctry)
# Run estimation
p.ardl <- 0 # Lags of independent variable
q.ardl <- 1 # Autoregressive lags
model.ardl <- ardlDlm(formula = diff.Movement ~ diff.StringencyIndex,
data = df.now,
p = p.ardl , q = q.ardl)
# Long run parameter
lr.coefficient.ardl <- sum(model.ardl$model$coefficients[2:5]) /
(1-sum(model.ardl$model$coefficients[6:8]))
lr.coeffs$LongRunCoeff[which(lr.coeffs$Country == ctry)] <- lr.coefficient.ardl
models.ardl[[ctry]] <- model.ardl
}
# Prepare data
for (ctry in unique(df.ARDL$Country)) {
df.now <- df.ARDL %>%
filter(Country == ctry)
# Run estimation
p.ardl <- 1 # Lags of independent variable
q.ardl <- 1 # Autoregressive lags
model.ardl <- ardlDlm(formula = diff.Movement ~ diff.StringencyIndex,
data = df.now,
p = p.ardl , q = q.ardl)
# Long run parameter
lr.coefficient.ardl <- sum(model.ardl$model$coefficients[2:5]) /
(1-sum(model.ardl$model$coefficients[6:8]))
lr.coeffs$LongRunCoeff[which(lr.coeffs$Country == ctry)] <- lr.coefficient.ardl
models.ardl[[ctry]] <- model.ardl
}
rm(df.now, df.ARDL, model.ardl, ctry, lr.coefficient.ardl,p.ardl,q.ardl)
write_rds(lr.coeffs, "LongRunCoefficients_ARDL.rds")
setwd("C:/Users/lnlro/Dropbox/Research/COVID-19/COVID-19")
source('C:/Users/lnlro/Dropbox/Research/COVID-19/COVID-19/data_structure_new.R', echo=TRUE)
getwd()
df3<-cr%>%
#filter(!is.na(patience))%>%
group_by(Country)%>%
summarise_all(last)%>%
dplyr::select_if(is.numeric)%>%
dplyr::select(COL:coef_simple) #%>%
# dplyr::select(-StringencyIndex)
c<-round(cor(df3,use="pairwise.complete.obs"),3)
p <- cor.mtest(df3)
DT::datatable(c)
corrplot::corrplot(c, method="color", p.mat = p, sig.level = 0.1,
addCoef.col = "black", number.cex=0.65, number.digits = 1,
insig = "blank",
diag=FALSE,
type = "upper")
#cor.test(lto$LongTerm,lto$Cor)
# Chunk 1: setup
knitr::opts_chunk$set(echo = FALSE, message=FALSE, warning=FALSE)
library("tidyverse")
library("lubridate")
#rm(list = ls())
source("ImportLong.r")
source("code/custom-functions.R")
df2<-df%>%
dplyr::select(all_of(c(basic,GoogleVars,behavioural,covid,economy,Policy,Compliance)))
#C1_School.closing:H1_Public.information.campaigns
# Chunk 2
df2%>%
filter(!is.na(LTO))%>%
group_by(Country)%>%
ggplot(aes(x=week,y=StringencyIndex))+
geom_line()+
facet_wrap(~Country)+
geom_vline(xintercept = as.Date("2020-05-17"),colour="red")+
theme_bw()
# Chunk 3
cr<-df2%>%
filter(!is.na(StringencyIndex),!is.na(Movement),week<as.Date("2020-05-17"))%>%
group_by(Country)%>%
mutate(cor_simple=cor.test(StringencyIndex,Movement)$estimate[[1]],
coef_simple=summary(lm(Movement~StringencyIndex))$coefficients[2,1],
se_simple=summary(lm(Movement~StringencyIndex))$coefficients[2,2])
df3<-cr%>%
#filter(!is.na(patience))%>%
group_by(Country)%>%
summarise_all(last)%>%
dplyr::select_if(is.numeric)%>%
dplyr::select(COL:coef_simple) #%>%
c<-round(cor(df3,use="pairwise.complete.obs"),3)
p <- cor.mtest(df3)
setwd("C:/Users/lnlro/Dropbox/Research/COVID-19/COVID-19/code")
rm(list = ls())
library("tidyverse")
library("lubridate")
library("vars")
library("zoo")
# Load data ----
# Import
df <- read_rds("df_covid_long.rds") %>%
filter(!is.na(StringencyIndex)) %>%
mutate(Date = ymd(Date))
setwd("C:/Users/lnlro/Dropbox/Research/COVID-19/COVID-19/code")
# Import
df <- read_rds("../df_covid_long.rds") %>%
filter(!is.na(StringencyIndex)) %>%
mutate(Date = ymd(Date))
OxVars<-c('C1_School.closing', 'C1_Flag', 'C2_Workplace.closing','C2_Flag','C3_Cancel.public.events','C3_Flag','C4_Restrictions.on.gatherings','C4_Flag','C5_Close.public.transport','C6_Stay.at.home.requirements','C6_Flag','C7_Restrictions.on.internal.movement','C7_Flag,C8_International.travel.controls','H1_Public.information.campaigns','H1_Flag')
GoogleVars<-c('retail_and_recreation_percent_change_from_baseline', 'grocery_and_pharmacy_percent_change_from_baseline', 'parks_percent_change_from_baseline', 'transit_stations_percent_change_from_baseline', 'workplaces_percent_change_from_baseline','residential_percent_change_from_baseline','Movement')
CoronaNet <- read.csv(file = "../../../CoronaNet/CononaNetDaily.csv") %>%
mutate(Country = country,
Date = ymd(date_start),
IndexCoronaNet = index_median)
CoronaNet <- read.csv(file = "../CoronaNet/CononaNetDaily.csv") %>%
mutate(Country = country,
Date = ymd(date_start),
IndexCoronaNet = index_median)
df<- df %>%
left_join(CoronaNet[,c("Country","Date","IndexCoronaNet")],
by = c("Country","Date"),
) %>%
group_by(Country) %>%
mutate(IndexCoronaNet = na.locf(
IndexCoronaNet,
na.rm = FALSE))
df<- df %>%
left_join(CoronaNet[,c("Country","Date","IndexCoronaNet")],
by = c("Country","Date"),
) %>%
group_by(Country) %>%
mutate(IndexCoronaNet = na.locf(
IndexCoronaNet,
na.rm = FALSE))
CoronaNet <- read.csv(file = "../CoronaNet/CononaNetDaily.csv") %>%
mutate(Country = country,
Date = ymd(date_start),
IndexCoronaNet = index_median)
df<- df %>%
left_join(CoronaNet[,c("Country","Date","IndexCoronaNet")],
by = c("Country","Date"),
) %>%
group_by(Country) %>%
mutate(IndexCoronaNet = na.locf(
IndexCoronaNet,
na.rm = FALSE))
df<- df %>%
left_join(CoronaNet[,c("Country","Date","IndexCoronaNet")],
by = c("Country","Date"),
) %>%
group_by(Country) %>%
mutate(IndexCoronaNet = na.locf(
IndexCoronaNet,
na.rm = FALSE))
df<- df %>%
left_join(CoronaNet[,c("Country","Date","IndexCoronaNet")],
by = c("Country","Date"),
) %>%
group_by(Country) %>%
mutate(IndexCoronaNet = na.locf(
IndexCoronaNet,
na.rm = FALSE))
rm(list = ls())
library("tidyverse")
library("lubridate")
library("vars")
library("zoo")
# Load data ----
# Import
df <- read_rds("../df_covid_long.rds") %>%
filter(!is.na(StringencyIndex)) %>%
mutate(Date = ymd(Date))
OxVars<-c('C1_School.closing', 'C1_Flag', 'C2_Workplace.closing','C2_Flag','C3_Cancel.public.events','C3_Flag','C4_Restrictions.on.gatherings','C4_Flag','C5_Close.public.transport','C6_Stay.at.home.requirements','C6_Flag','C7_Restrictions.on.internal.movement','C7_Flag,C8_International.travel.controls','H1_Public.information.campaigns','H1_Flag')
GoogleVars<-c('retail_and_recreation_percent_change_from_baseline', 'grocery_and_pharmacy_percent_change_from_baseline', 'parks_percent_change_from_baseline', 'transit_stations_percent_change_from_baseline', 'workplaces_percent_change_from_baseline','residential_percent_change_from_baseline','Movement')
# Merge stuff and rearrange
CoronaNet <- read.csv(file = "../CoronaNet/CononaNetDaily.csv") %>%
mutate(Country = country,
Date = ymd(date_start),
IndexCoronaNet = index_median)
df<- df %>%
left_join(CoronaNet[,c("Country","Date","IndexCoronaNet")],
by = c("Country","Date"),
) %>%
group_by(Country) %>%
mutate(IndexCoronaNet = na.locf(
IndexCoronaNet,
na.rm = FALSE))
rm(GoogleVars, OxVars, CoronaNet)
# Select variables of interest
df.use <- df %>%
dplyr::select(Country, Date, week,
total_cases, new_cases,
total_deaths, new_deaths,
Google,
C1_School.closing, C1_Flag,
C2_Workplace.closing, C2_Flag,
C3_Cancel.public.events, C3_Flag,
C4_Restrictions.on.gatherings, C4_Flag,
C5_Close.public.transport, C5_Flag,
C6_Stay.at.home.requirements, C6_Flag,
C7_Restrictions.on.internal.movement, C7_Flag,
C8_International.travel.controls,
StringencyIndex, StringencyIndexForDisplay,
IndexCoronaNet,
Movement,
polity2, risktaking, patience, ROL,
GDP.capita, CaseLog,
Continent, Region) %>%
mutate(Movement_lag_1d=dplyr::lag(Movement,1))%>%
mutate(Movement_lead_1d=dplyr::lead(Movement,1))%>%
mutate(DifMove=Movement-Movement_lag_1d)%>%
mutate(DifMoveLag=dplyr::lag(DifMove,1))%>%
mutate(DifPol=IndexCoronaNet-dplyr::lag(IndexCoronaNet,1))%>%
ungroup()
rm(df)
rm(list = ls())
source("ARDL_import-data.R")
library("dLagM")
# ARDL ----
df.ARDL <- df.use %>%
group_by(Country) %>%
mutate(diff.Movement = c(NA, diff(Movement)),
diff.StringencyIndex = c(NA, diff(StringencyIndex))) %>%
dplyr::select(Country, Date, diff.Movement, diff.StringencyIndex) %>%
drop_na()
lr.coeffs <- data.frame(Country = unique(df.ARDL$Country),
LongRunCoeff = NA)
models.ardl <- list()
# Prepare data
for (ctry in unique(df.ARDL$Country)) {
df.now <- df.ARDL %>%
filter(Country == ctry)
# Run estimation
p.ardl <- 1 # Lags of independent variable
q.ardl <- 1 # Autoregressive lags
model.ardl <- ardlDlm(formula = diff.Movement ~ diff.StringencyIndex,
data = df.now,
p = p.ardl , q = q.ardl)
# Long run parameter
lr.coefficient.ardl <- sum(model.ardl$model$coefficients[2:5]) /
(1-sum(model.ardl$model$coefficients[6:8]))
lr.coeffs$LongRunCoeff[which(lr.coeffs$Country == ctry)] <- lr.coefficient.ardl
models.ardl[[ctry]] <- model.ardl
}
lr.coeffs$baba <- 1
lr.coeffs[["baba2"]] <- 1
babavar <- "baba3"
lr.coeffs[[babavar]] <- 2
paste0("LongRunCoeff",pq)
pq<- 1
paste0("LongRunCoeff",pq)
rm(list = ls())
source("ARDL_import-data.R")
library("dLagM")
# ARDL ----
df.ARDL <- df.use %>%
group_by(Country) %>%
mutate(diff.Movement = c(NA, diff(Movement)),
diff.StringencyIndex = c(NA, diff(StringencyIndex))) %>%
dplyr::select(Country, Date, diff.Movement, diff.StringencyIndex) %>%
drop_na()
lr.coeffs <- data.frame(Country = unique(df.ARDL$Country),
LongRunCoeff = NA)
models.ardl <- list()
# Prepare data
for (pq in 1:3) {
variable.name <- paste0("LongRunCoeff_",pq)
for (ctry in unique(df.ARDL$Country)) {
df.now <- df.ARDL %>%
filter(Country == ctry)
# Run estimation
p.ardl <- pq # Lags of independent variable
q.ardl <- pq # Autoregressive lags
model.ardl <- ardlDlm(formula = diff.Movement ~ diff.StringencyIndex,
data = df.now,
p = p.ardl , q = q.ardl)
# Long run parameter
lr.coefficient.ardl <- sum(model.ardl$model$coefficients[2:5]) /
(1-sum(model.ardl$model$coefficients[6:8]))
lr.coeffs[[variable.name]][which(lr.coeffs$Country == ctry)] <- lr.coefficient.ardl
}
}
rm(df.now, df.ARDL, model.ardl, ctry, lr.coefficient.ardl,p.ardl,q.ardl)
View(lr.coeffs)
# ARDL ----
df.ARDL <- df.use %>%
group_by(Country) %>%
mutate(diff.Movement = c(NA, diff(Movement)),
diff.StringencyIndex = c(NA, diff(StringencyIndex))) %>%
dplyr::select(Country, Date, diff.Movement, diff.StringencyIndex) %>%
drop_na()
lr.coeffs <- data.frame(Country = unique(df.ARDL$Country),
LongRunCoeff = NA)
models.ardl <- list()
# Prepare data
for (pq in 1:2) {
variable.name <- paste0("LongRunCoeff_",pq)
for (ctry in unique(df.ARDL$Country)) {
df.now <- df.ARDL %>%
filter(Country == ctry)
# Run estimation
p.ardl <- pq # Lags of independent variable
q.ardl <- pq # Autoregressive lags
model.ardl <- ardlDlm(formula = diff.Movement ~ diff.StringencyIndex,
data = df.now,
p = p.ardl , q = q.ardl)
# Long run parameter
lr.coefficient.ardl <- sum(model.ardl$model$coefficients[2:5]) /
(1-sum(model.ardl$model$coefficients[6:8]))
lr.coeffs[[variable.name]][which(lr.coeffs$Country == ctry)] <- lr.coefficient.ardl
}
}
View(lr.coeffs)
View(model.ardl)
paste(diff.Movement,1:3)
paste("diff.Movement",1:3)
c("diff.Movement.t",paste("diff.Movement",1:3))
model.ardl$model$coefficients
model.ardl$model$coefficients[[paste("diff.Movement",1:3)]]
model.ardl$model$coefficients[[paste("diff.Movement",1:2)]]
model.ardl$model$coefficients[paste("diff.Movement",1:2)]
model.ardl$model$coefficients["diff.Movement"]
model.ardl$model$coefficients["diff.Movement1"]
model.ardl$model$coefficients
model.ardl$model$coefficients["diff.Movement.1"]
model.ardl$model$coefficients[paste("diff.Movement.",1:2)]
paste("diff.Movement.",1:2)
model.ardl$model$coefficients[paste0("diff.Movement.",1:2)]
# Prepare data
for (pq in 1:2) {
variable.name <- paste0("LongRunCoeff_",pq)
for (ctry in unique(df.ARDL$Country)) {
df.now <- df.ARDL %>%
filter(Country == ctry)
# Run estimation
p.ardl <- pq # Lags of independent variable
q.ardl <- pq # Autoregressive lags
model.ardl <- ardlDlm(formula = diff.Movement ~ diff.StringencyIndex,
data = df.now,
p = p.ardl , q = q.ardl)
# Long run parameter
lr.coefficient.ardl <- sum(model.ardl$model$coefficients[c("diff.StringencyIndex.t",paste0("diff.StringencyIndex.",1:p.ardl))]) /
(1-sum(model.ardl$model$coefficients[paste0("diff.Movement.",1:q.ardl)]))
lr.coeffs[[variable.name]][which(lr.coeffs$Country == ctry)] <- lr.coefficient.ardl
}
}
lr.coeffs <- data.frame(Country = unique(df.ARDL$Country))
models.ardl <- list()
# Prepare data
for (pq in 1:3) {
variable.name <- paste0("LongRunCoeff_",pq)
for (ctry in unique(df.ARDL$Country)) {
df.now <- df.ARDL %>%
filter(Country == ctry)
# Run estimation
p.ardl <- pq # Lags of independent variable
q.ardl <- pq # Autoregressive lags
model.ardl <- ardlDlm(formula = diff.Movement ~ diff.StringencyIndex,
data = df.now,
p = p.ardl , q = q.ardl)
# Long run parameter
lr.coefficient.ardl <- sum(model.ardl$model$coefficients[c("diff.StringencyIndex.t",paste0("diff.StringencyIndex.",1:p.ardl))]) /
(1-sum(model.ardl$model$coefficients[paste0("diff.Movement.",1:q.ardl)]))
lr.coeffs[[variable.name]][which(lr.coeffs$Country == ctry)] <- lr.coefficient.ardl
}
}
write_rds(lr.coeffs, "LongRunCoefficients_ARDL.rds")
write_rds(lr.coeffs, "../LongRunCoefficients_ARDL.rds")
source('C:/Users/lnlro/Dropbox/Research/COVID-19/COVID-19/data_structure_new.R', echo=TRUE)
setwd("C:/Users/lnlro/Dropbox/Research/COVID-19/COVID-19")
rm(list = ls())
source('C:/Users/lnlro/Dropbox/Research/COVID-19/COVID-19/data_structure_new.R', echo=TRUE)
Compliance <- c("LongRunCoeff_1","LongRunCoeff_2","LongRunCoeff_3")
# Chunk 1: setup
knitr::opts_chunk$set(echo = FALSE, message=FALSE, warning=FALSE)
library("tidyverse")
library("lubridate")
#rm(list = ls())
source("ImportLong.r")
source("code/custom-functions.R")
df2<-df%>%
dplyr::select(all_of(c(basic,GoogleVars,behavioural,covid,economy,Policy,Compliance)))
#C1_School.closing:H1_Public.information.campaigns
# Chunk 2
df2%>%
filter(!is.na(LTO))%>%
group_by(Country)%>%
ggplot(aes(x=week,y=StringencyIndex))+
geom_line()+
facet_wrap(~Country)+
geom_vline(xintercept = as.Date("2020-05-17"),colour="red")+
theme_bw()
# Chunk 3
cr<-df2%>%
filter(!is.na(StringencyIndex),!is.na(Movement),week<as.Date("2020-05-17"))%>%
group_by(Country)%>%
mutate(cor_simple=cor.test(StringencyIndex,Movement)$estimate[[1]],
coef_simple=summary(lm(Movement~StringencyIndex))$coefficients[2,1],
se_simple=summary(lm(Movement~StringencyIndex))$coefficients[2,2])
setwd("C:/Users/lnlro/Dropbox/Research/COVID-19/COVID-19")
knitr::opts_chunk$set(echo = FALSE, message=FALSE, warning=FALSE)
library("tidyverse")
library("lubridate")
#rm(list = ls())
source("ImportLong.r")
source("code/custom-functions.R")
df2<-df%>%
dplyr::select(all_of(c(basic,GoogleVars,behavioural,covid,economy,Policy,Compliance)))
#C1_School.closing:H1_Public.information.campaigns
LongRunCoefficients_ARDL. <- readRDS("C:/Users/lnlro/Dropbox/Research/COVID-19/COVID-19/LongRunCoefficients_ARDL.rds")
source('C:/Users/lnlro/Dropbox/Research/COVID-19/COVID-19/data_structure_new.R', echo=TRUE)
df2%>%
filter(!is.na(LTO))%>%
group_by(Country)%>%
ggplot(aes(x=week,y=StringencyIndex))+
geom_line()+
facet_wrap(~Country)+
geom_vline(xintercept = as.Date("2020-05-17"),colour="red")+
theme_bw()
knitr::opts_chunk$set(echo = FALSE, message=FALSE, warning=FALSE)
library("tidyverse")
library("lubridate")
#rm(list = ls())
source("ImportLong.r")
source("code/custom-functions.R")
df2<-df%>%
dplyr::select(all_of(c(basic,GoogleVars,behavioural,covid,economy,Policy,Compliance)))
#C1_School.closing:H1_Public.information.campaigns
df2%>%
filter(!is.na(LTO))%>%
group_by(Country)%>%
ggplot(aes(x=week,y=StringencyIndex))+
geom_line()+
facet_wrap(~Country)+
geom_vline(xintercept = as.Date("2020-05-17"),colour="red")+
theme_bw()
cr<-df2%>%
filter(!is.na(StringencyIndex),!is.na(Movement),week<as.Date("2020-05-17"))%>%
group_by(Country)%>%
mutate(cor_simple=cor.test(StringencyIndex,Movement)$estimate[[1]],
coef_simple=summary(lm(Movement~StringencyIndex))$coefficients[2,1],
se_simple=summary(lm(Movement~StringencyIndex))$coefficients[2,2])
df3<-cr%>%
#filter(!is.na(patience))%>%
group_by(Country)%>%
summarise_all(last)%>%
dplyr::select_if(is.numeric)%>%
dplyr::select(COL:coef_simple) #%>%
# dplyr::select(-StringencyIndex)
c<-round(cor(df3,use="pairwise.complete.obs"),3)
p <- cor.mtest(df3)
DT::datatable(c)
corrplot::corrplot(c, method="color", p.mat = p, sig.level = 0.1,
addCoef.col = "black", number.cex=0.65, number.digits = 1,
insig = "blank",
diag=FALSE,
type = "upper")
#cor.test(lto$LongTerm,lto$Cor)
