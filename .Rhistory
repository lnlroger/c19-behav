rm(loc,cities)
city_short<-gwmp%>%
filter(!is.na(Movement),!is.na(risktaking),!is.na(Temp_C))%>%
group_by(Country,City)%>%
summarise(
across(where(is.numeric), mean),
across(where(is.factor), first),
across(where(is.character), first),
n = n())
country_short<-city_short%>%
group_by(Country)%>%
summarise(
across(where(is.numeric), mean),
across(where(is.factor), first),
across(where(is.character), first),
n = n())
z<-mobility%>%
anti_join(mobility_regional,by="Country")%>%
group_by(Country)%>%
summarise(n())
print(z$Country)
nrow(z)
print(z2$Country)
print(country_short$Country)
city_short$City
city_short$City_GPS
n_groups(gwmp)
gwmp<-gwmp%>%
group_by(Country)
n_groups(gwmp)
city_short$City
city_short$city
city_short$City_GPS
source("Weather_new/combining_Cities.r")
source("Google/import_mobility.r")
#source("ImportLong.r")
source("Weather_new/combining_Cities.r")
#source("ImportLong.r")
source("Weather_new/combining_Cities.r")
library(tidyverse)
library(stringr)
library(lmerTest)
library(stargazer)
library(mfx)
library(knitr)
library(kSamples)
library(FSA)
library(kableExtra)
library(xtable)
library(miceadds)
library(jtools)
library(plm)
library(clubSandwich)
library(ggrepel)
library(sjPlot)
library(sjmisc)
library(sjlabelled)
library(naniar)
library(ggpubr)
library(lubridate)
source("Weather_new/combining_Cities.r")
source("Google/import_mobility.r")
rm(loc,cities)
gwmp<-gwmp%>%
group_by(Country)
city_short<-gwmp%>%
filter(!is.na(Movement),!is.na(risktaking),!is.na(Temp_C))%>%
group_by(Country,City)%>%
summarise(
across(where(is.numeric), mean),
across(where(is.factor), first),
across(where(is.character), first),
n = n())
country_short<-city_short%>%
group_by(Country)%>%
summarise(
across(where(is.numeric), mean),
across(where(is.factor), first),
across(where(is.character), first),
n = n())
nrow(city_short)
print(city_short$city)
print(city_short$City)
?datatable
??datatable
data.table::datatable(
city_short%>%
dplyr::select(Country,City,Temp_c,risktaking, patience, Movement, population)
)
data.table::dt(
city_short%>%
dplyr::select(Country,City,Temp_c,risktaking, patience, Movement, population)
)
DT::datatable(
city_short%>%
dplyr::select(Country,City,Temp_c,risktaking, patience, Movement, population)
)
DT::datatable(
city_short%>%
dplyr::select(Country,City,Temp_C,risktaking, patience, Movement, population)
)
DT::datatable(
city_short%>>%
group_by(Country)%>%
summarise(n_cities=n())
)
DT::datatable(
city_short%>%
group_by(Country)%>%
summarise(n_cities=n())
)
city_short_w<-city_short%>%
filter(!is.na(Temp_C))
qmplot(lon, lat, data = city_short, maptype = "toner-lite", color = I("red"))
gwmp$Continent<- countrycode(sourcevar = gwmp[, "Country"],
origin = "country.name",
destination = "continent")
gwmp$Continent<- countrycode(sourcevar = gwmp[, "country"],
origin = "country.name",
destination = "continent")
gwmp$Country
gwmp$Continent<- countrycode(sourcevar = gwmp[, "Country"],
origin = "country.name",
destination = "continent")
class(gwmp$Country)
gwmp$Continent<- countrycode(sourcevar = gwmp[, 1],
origin = "country.name",
destination = "continent")
x<- countrycode(sourcevar = gwmp[, 1],
origin = "country.name",
destination = "continent")
x<- countrycode(sourcevar = gwmp[,1],
origin = "country.name",
destination = "continent")
class(gwmp)
x<- countrycode(sourcevar = as.data.frame(gwmp[,1]),
origin = "country.name",
destination = "continent")
?countrycode
x<- countrycode(sourcevar = gwmp$Country,
origin = "country.name",
destination = "continent")
gwmp$Continent<- countrycode(sourcevar = gwmp$Country,
origin = "country.name",
destination = "continent")
cor.test(gwmp$Movement,gwmp$Temp_C)
cor.test(gwmp$Movement,gwmp$Rain)
summary(gwmp$Rain)
summary(gwmp$Temp_C)
lm(gwmp$Movement~gwmp$Rain)
models<-gwmp%>%
group_by(Country)%>%
group_modify(~ broom::tidy(lm(Movement ~ Temp_C, data = .x)))
cor.test(gwmp$Movement,gwmp$Temp_C)
models<-gwmp%>%
filter(!is.na(Temp_C),!is.na(Movement))
models<-gwmp%>%
filter(!is.na(Temp_C),!is.na(Movement))%>%
group_by(Country)%>%
group_modify(~ broom::tidy(lm(Movement ~ Temp_C, data = .x)))
DT::datatable(
city_short%>%
dplyr::select(Country,City,Temp_C,risktaking, patience, Movement, population,n)
)
View(gwmp)
View(city_short)
8018-7870
137*3
View(gwmp)
stockholm<-gwmp%>%filter(City=="Stockholm County")
View(stockholm)
alabamba<-gwmp%>%filter(City=="Alabama")
View(alabamba)
View(stockholm)
class(gwmp$date)
class(gwmp$Date)
gwmp2<-gwmp%>%
group_by(Country,City,Date)%>%
summarise_all(first)
city100<-city_short%>%filter(n>=100)
nrow(city100
nrow(city100)
gwmp2<-gwmp2%>% filter(City %in% city100$City)
city_short2<-gwmp2%>%
group_by(Country,City)%>%
summarise(
across(where(is.numeric), mean),
across(where(is.factor), first),
across(where(is.character), first),
n = n())
View(city_short2)
nrow(city100)
This leaves us with `r nrow(city100)` cities. Peculiarly, according to another metric, we have `n_groups(city_short2)`
This leaves us with `r nrow(city100)` cities. Peculiarly, according to another metric, we have `n_group(city_short2)`
n_groups(city_short2)
city_short2<-gwmp2%>%
ungroup()%>%
group_by(Country,City)%>%
summarise(
across(where(is.numeric), mean),
across(where(is.factor), first),
across(where(is.character), first),
n = n())
nrow(city100)
This leaves us with `r nrow(city100)` cities. Peculiarly, according to another metric, we have `n_group(city_short2)`
n_group(city_short2)
n_groups(city_short2)
nrow(city_short2)
DT::datatable(
city_short2%>%
dplyr::select(Country,City,Temp_C,risktaking, patience, Movement, population,n)
)
DT::datatable(
city_short2%>%
group_by(Country)%>%
summarise(n_cities=n())
)
qmplot(lon, lat, data = city_short2, maptype = "toner-lite", color = I("red"))
gwmp2$Date[1]
* Athens, 20/03/2020
* Our data set says: `gwmp2%>%filter(City="Decentralized Administration of Attica", Date="2020-03-20")%>%print(Temp_C)`
gwmp2%>%filter(City="Decentralized Administration of Attica", Date="2020-03-20")
* Athens, 20/03/2020
* Our data set says: `gwmp2%>%filter(City=="Decentralized Administration of Attica", Date=="2020-03-20")%>%print(Temp_C)`
gwmp2%>%filter(City=="Decentralized Administration of Attica", Date=="2020-03-20")
* Athens, 20/03/2020
* Our data set says: `gwmp2%>%filter(City=="Decentralized Administration of Attica", Date=="2020-03-20")%>%Temp_C`
* Athens, 20/03/2020
* Our data set says: `gwmp2%>%filter(City=="Decentralized Administration of Attica", Date=="2020-03-20")%>%summarise(Temp=Temp_C)`
* Athens, 20/03/2020
* Our data set says: `gwmp2%>%filter(City=="Decentralized Administration of Attica", Date=="2020-03-20")%>%.$Temp_C`
* Athens, 20/03/2020
* Our data set says: `gwmp2%>%filter(City=="Decentralized Administration of Attica", Date=="2020-03-20") %>% .$Temp_C`
gwmp2$Temp_C
* Athens, 20/03/2020
* Our data set says: `gwmp2%>%filter(City=="Decentralized Administration of Attica", Date=="2020-03-20") %>% $Temp_C`
* Athens, 20/03/2020
* Our data set says: `gwmp2%>%filter(City=="Decentralized Administration of Attica", Date=="2020-03-20")`
* Athens, 20/03/2020
* Our data set says: `gwmp2%>%filter(City=="Decentralized Administration of Attica", Date=="2020-03-20")`
gwmp2%>%filter(City=="Decentralized Administration of Attica", Date=="2020-03-20")%>% .$Temp_C
gwmp2%>%filter(City=="Decentralized Administration of Attica", Date=="2020-27-20")%>% .$Temp_C
gwmp2%>%filter(City=="Decentralized Administration of Attica", Date=="2020-03-27")%>% .$Temp_C
gwmp2%>%filter(City=="Decentralized Administration of Attica", Date=="2020-03-16")%>% .$Temp_C
gwmp2%>%filter(City=="Munich", Date=="2020-03-20")%>% .$Temp_C
gwmp2%>%filter(City=="Bavaria", Date=="2020-03-20")%>% .$Temp_C
gwmp2%>%filter(City=="Bavaria", Date=="2020-05-10")%>% .$Temp_C
gwmp2%>%filter(City=="Bavaria", Date=="2020-05-10")%>% .$Temp_C
gwmp2%>%filter(City=="Bavaria", Date=="2020-05-19")%>% .$Temp_C
gwmp2%>%filter(City=="Bavaria", Date=="2020-05-17")%>% .$Temp_C
geocode("Bavaria")
register_google(key="AIzaSyDxWm-ZFyrkOjBpiNxUvZZaDheN0PP-tsQ")
geocode("Bavaria")
geocode("Munich")
geocode("Lecfeld")
gwmp2%>%filter(City=="Bavaria", Date=="2020-05-10")%>% .$Temp_C
gwmp2%>%filter(City=="Florida", Date=="2020-04-05")%>% .$Temp_C
gwmp2%>%filter(City=="Florida", Date=="2020-04-05")%>% .$Temp_C
gwmp2%>%filter(City=="Florida", Date=="2020-04-05")%>% .$Rain
gwmp2%>%filter(City=="Florida", Date=="2020-04-05")%>% .$PRCP
gwmp2%>%filter(City=="London", Date=="2020-04-05")%>% .$Temp_C
gwmp2%>%filter(City=="Greater London", Date=="2020-04-05")%>% .$Temp_C
gwmp2%>%filter(City=="Greater London", Date=="2020-04-05")%>% .$Temp_C
gwmp2%>%filter(City=="Greater London", Date=="2020-09-02")%>% .$Temp_C
gwmp2%>%filter(City=="Greater London", Date=="2020-02-09")%>% .$Temp_C
gwmp2%>%filter(City=="Greater London", Date=="2020-02-09")%>% .$Temp_C
gwmp2%>%filter(City=="Greater London", Date=="2020-03-09")%>% .$Temp_C
gwmp2%>%filter(City=="Greater London", Date=="2020-03-09")%>% .$Rain
View(gwmp2)
gwmp2%>%filter(City=="Greater London", Date=="2020-02-28")%>% .$Temp_C
gwmp2%>%filter(City=="Greater London", Date=="2020-02-28")%>% .$Rain
gwmp2%>%filter(City=="Greater London", Date=="2020-02-28")%>% .$PRCP
summary(gwmp$TEMP)
gwmp2$PRCP_Cm=1.54*PRCP
gwmp2$PRCP_Cm=1.54*gwmp2$PRCP
cor.test(gwmp$Movement,gwmp$Temp_C)
cor.test(gwmp$Movement,gwmp$Rain)
cor.test(gwmp2$Movement,gwmp$Temp_C)
cor.test(gwmp2$Movement,gwmp2$Temp_C)
cor.test(gwmp2$Movement,gwmp2$Rain)
cor.test(gwmp2$Movement,gwmp2$PRCP_Cm)
source("OxfordTracking/covid-policy-tracker-master/data/import_OxCGRT.R")
df<-left_join(gwmp2,Ox,by=c("Country","Date"))
View(df)
Ox$Date[1]
Ox$Date[2]
wave1<-df%>%
group_by(Country,City)%>%
mutate(day=row_number())%>%  ###Putting a counter for each row of each group
add_tally()%>% ## creating a variable "n" that counts how many rows each group has.
arrange(Date)%>%
mutate(wave1=if_else(StringencyIndex>=dplyr::lag(StringencyIndex),1,0))%>%
mutate(fir=match(0,wave1)-1)%>% ### first occurence of a 0-value - 1 to discard the 0.
mutate(fir=replace_na(fir,n()))%>% ### countries that never had a 0 appear as NA. We replace NAs with total rows of 1's
filter(day<=fir) # Keep only the rows before the first 0 occurence
wave1<-df%>%
group_by(Country,City)%>%
mutate(day=row_number())%>%  ###Putting a counter for each row of each group
add_tally()%>% ## creating a variable "n" that counts how many rows each group has.
arrange(Date)%>%
mutate(wave1=if_else(StringencyIndex>=dplyr::lag(StringencyIndex),1,0))%>%
mutate(fir=match(0,wave1)-1)
?replace_na
wave1<-df%>%
group_by(Country,City)%>%
mutate(day=row_number())%>%  ###Putting a counter for each row of each group
add_tally()%>% ## creating a variable "n" that counts how many rows each group has.
arrange(Date)%>%
mutate(wave1=if_else(StringencyIndex>=dplyr::lag(StringencyIndex),1,0))%>%
mutate(fir=match(0,wave1)-1)%>% ### first occurence of a 0-value - 1 to discard the 0.
mutate(fir=tidyr::replace_na(fir,n()))%>% ### countries that never had a 0 appear as NA. We replace NAs with total rows of 1's
filter(day<=fir) # Keep only the rows before the first 0 occurence
cor.test(wave1$Movement,wave1$Temp_C)
cor.test(wave1$Movement,wave1$Rain)
cor.test(wave1$Movement,wave1$PRCP_Cm)
summary(wave1$Date)
summary(wave1$Temp_C)
wave1_W<-wave1%>%
filter(!is.na(Movement),!is.na(Temp_C))
cor.test(wave1$Movement,wave1$Temp_C)
cor.test(wave1$Movement,wave1$Rain)
cor.test(wave1$Movement,wave1$PRCP_Cm)
cor.test(wave1_W$Movement,wave1_W$Temp_C)
models<-wave1%>%
filter(!is.na(Temp_C),!is.na(Movement))%>%
group_by(Country)%>%
group_modify(~ broom::tidy(lm(Movement ~ Temp_C, data = .x)))
View(models)
models<-wave1%>%
filter(!is.na(Temp_C),!is.na(Movement))%>%
group_by(Country,City)%>%
group_modify(~ broom::tidy(lm(Movement ~ Temp_C, data = .x)))
View(models)
m1<-models%>%filter(term=="(Intercept)")
models<-wave1%>%
filter(!is.na(Temp_C),!is.na(Movement))%>%
group_by(Country,City)%>%
group_modify(~ broom::tidy(lm(Movement ~ Temp_C, data = .x)))%>%
group_modify(~ broom::tidy(lm(Movement ~ PRCP_C, data = .x)))
modelsTemp<-wave1%>%
filter(!is.na(Temp_C),!is.na(Movement))%>%
group_by(Country,City)%>%
group_modify(~ broom::tidy(lm(Movement ~ Temp_C, data = .x)))%>%
m1<-models%>%filter(term=="(Intercept)")
modelsTemp<-wave1%>%
filter(!is.na(Temp_C),!is.na(Movement))%>%
group_by(Country,City)%>%
group_modify(~ broom::tidy(lm(Movement ~ Temp_C, data = .x)))
modelsPRCP<-wave1%>%
filter(!is.na(PRCP_Cm),!is.na(Movement))%>%
group_by(Country,City)%>%
group_modify(~ broom::tidy(lm(Movement ~ PRCP_Cm, data = .x)))
View(modelsPRCP)
modelsTemp<-wave1%>%
filter(!is.na(Temp_C),!is.na(Movement))%>%
group_by(Country,City)%>%
group_modify(~ broom::tidy(lm(Movement ~ Temp_C, data = .x)))%>%
rename(Temp_C_Coef=estimate)
modelsPRCP<-wave1%>%
filter(!is.na(PRCP_Cm),!is.na(Movement))%>%
group_by(Country,City)%>%
group_modify(~ broom::tidy(lm(Movement ~ PRCP_Cm, data = .x)))%>%
rename(PRCP_Cm_coef=estimate)
modelsTemp<-wave1%>%
filter(!is.na(Temp_C),!is.na(Movement))%>%
group_by(Country,City)%>%
group_modify(~ broom::tidy(lm(Movement ~ Temp_C, data = .x)))
m1<-modelsTemp%>%filter(term=="(Intercept)")%>%select(estimate)%>%rename(Intercept_Temp=estimate)
modelsTemp<-wave1%>%
filter(!is.na(Temp_C),!is.na(Movement))%>%
group_by(Country,City)%>%
group_modify(~ broom::tidy(lm(Movement ~ Temp_C, data = .x)))
View(modelsTemp)
m1<-modelsTemp%>%filter(term=="(Intercept)")%>%dplyr::select(estimate)%>%rename(Intercept_Temp=estimate)
m2<-models%>%filter(term=="Temp_C")%>%dplyr::select(estimate,p.value)%>%rename(Intercept_Temp=estimate)
m3<-modelsPRCP%>%filter(term=="(Intercept)")%>%dplyr::select(estimate)%>%rename(Intercept_PRCP=estimate)
View(modelsPRCP)
modelsPRCP<-wave1%>%
filter(!is.na(PRCP_Cm),!is.na(Movement))%>%
group_by(Country,City)%>%
group_modify(~ broom::tidy(lm(Movement ~ PRCP_Cm, data = .x)))
m3<-modelsPRCP%>%filter(term=="(Intercept)")%>%dplyr::select(estimate)%>%rename(Intercept_PRCP=estimate)
m4<-modelsPRCP%>%filter(term=="PRCP_Cm")%>%dplyr::select(estimate,p.value)%>%rename(Intercept_PRCP=estimate)
View(m1)
View(m4)
View(m3)
View(m2)
m2<-models%>%filter(term=="Temp_C")%>%dplyr::select(estimate,p.value)%>%rename(Temp_C_coef=estimate)
m4<-modelsPRCP%>%filter(term=="PRCP_Cm")%>%dplyr::select(estimate,p.value)%>%rename(PRCP_Cm_coef=estimate)
models<-cbind(m1,m2,m3,m4)
View(m4)
View(modelsPRCP)
summary(modelsPRCP$estimate)
m3<-modelsPRCP%>%filter(term=="(Intercept)")%>%dplyr::select(estimate)%>%rename(Intercept_PRCP=estimate)
m4<-modelsPRCP%>%filter(term=="PRCP_Cm")%>%dplyr::select(estimate,p.value)%>%rename(PRCP_Cm_coef=estimate)
View(modelsPRCP)
m34<-left_join(m3,m4,by=c("Country","City"))
models<-cbind(m1,m2,m34)
models<-left_join(m1,m2,m34,by=c("Country","City"))
View(models)
models12<-left_join(m1,m2,by=c("Country","City"))
m12<-left_join(m1,m2,by=c("Country","City"))
models<-left_join(m12,m34,by=c("Country","City"))
View(models)
models<-round(models,3)
DT::datatable(models)
DT::datatable(models)
z<-DT::datatable(models)
View(z)
z
modelsTemp<-wave1%>%
filter(!is.na(Temp_C),!is.na(Movement))%>%
group_by(Country)%>%
group_modify(~ broom::tidy(lm(Movement ~ Temp_C, data = .x)))
modelsPRCP<-wave1%>%
filter(!is.na(PRCP_Cm),!is.na(Movement))%>%
group_by(Country)%>%
group_modify(~ broom::tidy(lm(Movement ~ PRCP_Cm, data = .x)))
m1<-modelsTemp%>%filter(term=="(Intercept)")%>%dplyr::select(estimate)%>%rename(Intercept_Temp=estimate)
m2<-models%>%filter(term=="Temp_C")%>%dplyr::select(estimate,p.value)%>%rename(Temp_C_coef=estimate)
m3<-modelsPRCP%>%filter(term=="(Intercept)")%>%dplyr::select(estimate)%>%rename(Intercept_PRCP=estimate)
m4<-modelsPRCP%>%filter(term=="PRCP_Cm")%>%dplyr::select(estimate,p.value)%>%rename(PRCP_Cm_coef=estimate)
m34<-left_join(m3,m4,by=c("Country","City"))
m12<-left_join(m1,m2,by=c("Country","City"))
models<-left_join(m12,m34,by=c("Country","City"))
z<-DT::datatable(models)
modelsTemp<-wave1%>%
filter(!is.na(Temp_C),!is.na(Movement))%>%
group_by(Country)%>%
group_modify(~ broom::tidy(lm(Movement ~ Temp_C, data = .x)))
modelsPRCP<-wave1%>%
filter(!is.na(PRCP_Cm),!is.na(Movement))%>%
group_by(Country)%>%
group_modify(~ broom::tidy(lm(Movement ~ PRCP_Cm, data = .x)))
m1<-modelsTemp%>%filter(term=="(Intercept)")%>%dplyr::select(estimate)%>%rename(Intercept_Temp=estimate)
m2<-models%>%filter(term=="Temp_C")%>%dplyr::select(estimate,p.value)%>%rename(Temp_C_coef=estimate)
View(modelsTemp)
m1<-modelsTemp%>%filter(term=="(Intercept)")%>%dplyr::select(estimate)%>%rename(Intercept_Temp=estimate)
m2<-modelsTemp%>%filter(term=="Temp_C")%>%dplyr::select(estimate,p.value)%>%rename(Temp_C_coef=estimate)
m3<-modelsPRCP%>%filter(term=="(Intercept)")%>%dplyr::select(estimate)%>%rename(Intercept_PRCP=estimate)
m4<-modelsPRCP%>%filter(term=="PRCP_Cm")%>%dplyr::select(estimate,p.value)%>%rename(PRCP_Cm_coef=estimate)
m34<-left_join(m3,m4,by=c("Country","City"))
m12<-left_join(m1,m2,by=c("Country","City"))
m34<-left_join(m3,m4,by=c("Country"))
m12<-left_join(m1,m2,by=c("Country"))
models<-left_join(m12,m34,by=c("Country"))
z<-DT::datatable(models)
z
DT::datatable(models)
DT::datatable(models[,-1],3)
models[,-1]<-round(models[,-1],3)
DT::datatable(models)
country_short<-country_short%>%
left_join(models,by="Country")
View(city_short2)
View(country_short)
country_short%>%
filter(p.value.x<0.1,!is.na(Temp_C_coef))%>%
ggplot(aes(x=Temp_C,y=Temp_C_coef))+
theme_bw()+
geom_text_repel(aes(x=log(TotalDeaths/Population),y=Movement,label=Country))
country_short%>%
filter(p.value.x<0.1,!is.na(Temp_C_coef))%>%
ggplot(aes(x=Temp_C,y=Temp_C_coef))+
theme_bw()+
geom_text_repel(aes(x=log(TotalDeaths/Population),y=Movement,label=Country))
country_short%>%
filter(p.value.x<0.1,!is.na(Temp_C_coef))%>%
ggplot(aes(x=Temp_C,y=Temp_C_coef))+
theme_bw()+
geom_text_repel(aes(x=Temp_C,y=Temp_C_coef,label=Country))
country_short%>%
filter(p.value.x<0.1,!is.na(Temp_C_coef))%>%
ggplot(aes(x=Temp_C,y=Temp_C_coef))+
geom_point(colour=blue,size=2,alpha=0.7)
country_short%>%
filter(p.value.x<0.1,!is.na(Temp_C_coef))%>%
ggplot(aes(x=Temp_C,y=Temp_C_coef))+
geom_point(colour="blue",size=2,alpha=0.7)
country_short%>%
filter(p.value.x<0.1,!is.na(Temp_C_coef))%>%
ggplot(aes(x=Temp_C,y=Temp_C_coef))+
geom_point(colour="blue",size=2,alpha=0.7)+
theme_bw()+
geom_text_repel(aes(x=Temp_C,y=Temp_C_coef,label=Country))
country_short%>%
filter(p.value.x<0.1,!is.na(Temp_C_coef))%>%
ggplot(aes(x=Dewp_C,y=Temp_C_coef))+
geom_point(colour="blue",size=2,alpha=0.7)+
theme_bw()+
geom_text_repel(aes(x=Dewp_C,y=Temp_C_coef,label=Country))
country_short%>%
filter(p.value.x<0.1,!is.na(Temp_C_coef))%>%
ggplot(aes(x=Temp_C,y=Temp_C_coef))+
geom_point(colour="blue",size=2,alpha=0.7)+
theme_bw()+
labs(x = 'Average Temperature',y = "Coef. Temp~Movement")+
geom_text_repel(aes(x=Tempp_C,y=Temp_C_coef,label=Country))
country_short%>%
filter(p.value.x<0.1,!is.na(Temp_C_coef))%>%
ggplot(aes(x=Temp_C,y=Temp_C_coef))+
geom_point(colour="blue",size=2,alpha=0.7)+
theme_bw()+
labs(x = 'Average Temperature',y = "Coef. Temp~Movement")+
geom_text_repel(aes(x=Temp_C,y=Temp_C_coef,label=Country))
country_short%>%
filter(p.value.x<0.1,!is.na(Temp_C_coef))%>%
ggplot(aes(x=Dewp_C,y=Temp_C_coef))+
geom_point(colour="blue",size=2,alpha=0.7)+
theme_bw()+
labs(x = 'Average Dewpoint',y = "Coef. Temp~Movement")+
geom_text_repel(aes(x=Dewp_C,y=Temp_C_coef,label=Country))
