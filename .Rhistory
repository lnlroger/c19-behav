diff.StringencyIndex = c(NA, diff(StringencyIndex)))
ardl.now <-ardlDlm(formula = diff.Movement ~ diff.StringencyIndex,
data = df.real.test,
p = p.now , q = q.now)
ardl.now$model$coefficients
lr.coefficient.test <- sum(ardl.now$model$coefficients[c("diff.StringencyIndex.t",
paste0("diff.StringencyIndex.",1:p.now))]) /
(1-sum(ardl.now$model$coefficients[paste0("diff.Movement.",1:q.now)]))
lr.coefficient.test
forecast(ardl.now, df.real.test$diff.StringencyIndex, h = length(df.real.test$diff.StringencyIndex))
p.now <- 3
q.now <- 3
df.real.test <- df.real %>%
filter(Country == "Germany") %>%
mutate(diff.Movement = c(NA, diff(Movement)),
diff.StringencyIndex = c(NA, diff(StringencyIndex))) %>%
na.omit()
ardl.now <-ardlDlm(formula = diff.Movement ~ diff.StringencyIndex,
data = df.real.test,
p = p.now , q = q.now)
ardl.now$model$coefficients
lr.coefficient.test <- sum(ardl.now$model$coefficients[c("diff.StringencyIndex.t",
paste0("diff.StringencyIndex.",1:p.now))]) /
(1-sum(ardl.now$model$coefficients[paste0("diff.Movement.",1:q.now)]))
lr.coefficient.test
forecast(ardl.now, df.real.test$diff.StringencyIndex, h = length(df.real.test$diff.StringencyIndex))
forecast.test <- forecast(ardl.now, df.real.test$diff.StringencyIndex,
h = length(df.real.test$diff.StringencyIndex))
forecast.test.level <- diffinv(forecast.test)
forecast.test <- forecast(ardl.now, df.real.test$diff.StringencyIndex,
h = length(df.real.test$diff.StringencyIndex))
forecast.test
forecast.test.level <- diffinv(forecast.test$forecasts)
forecast.test$forecasts
forecast.test <- forecast(ardl.now, df.real.test$diff.StringencyIndex,
h = length(df.real.test$diff.StringencyIndex))
forecast.test.level <- diffinv(forecast.test$forecasts)
forecast.test$forecasts
str(forecast.test$forecasts)
as.array(forecast.test$forecasts)
str(as.array(forecast.test$forecasts))
str(as.numeric(forecast.test$forecasts))
forecast.test.level <- diffinv(as.numeric(forecast.test$forecasts))
forecast.test.level
length(df.real.test$diff.StringencyIndex)
length(df.real.test$StringencyIndex)
(df.real.test$diff.StringencyIndex)
length(forecast.test.level)
df.plot <- df.real.test %>%
mutate(Forecast = forecast.test.level)
?forecast
length(forecast.test)
length(forecast.test$forecasts)
df.plot <- df.real.test %>%
mutate(Forecast = forecast.test.level[-1])
df.plot <- df.real.test %>%
mutate(Forecast = forecast.test.level[-1]) %>%
pivot_longer(cols = c("Movement","StringencyIndex","Forecast"), names_to = "Variable")
ggplot(df.plot, aes(Date, value, colour = Variable)) +
geom_line()
p.now <- 3
q.now <- 3
df.real.test <- df.real %>%
filter(Country == "United Kingdom") %>%
mutate(diff.Movement = c(NA, diff(Movement)),
diff.StringencyIndex = c(NA, diff(StringencyIndex))) %>%
na.omit()
ardl.now <-ardlDlm(formula = diff.Movement ~ diff.StringencyIndex,
data = df.real.test,
p = p.now , q = q.now)
ardl.now$model$coefficients
lr.coefficient.test <- sum(ardl.now$model$coefficients[c("diff.StringencyIndex.t",
paste0("diff.StringencyIndex.",1:p.now))]) /
(1-sum(ardl.now$model$coefficients[paste0("diff.Movement.",1:q.now)]))
lr.coefficient.test
forecast.test <- forecast(ardl.now, df.real.test$diff.StringencyIndex,
h = length(df.real.test$diff.StringencyIndex))
forecast.test.level <- diffinv(as.numeric(forecast.test$forecasts))
df.plot <- df.real.test %>%
mutate(Forecast = forecast.test.level[-1]) %>%
pivot_longer(cols = c("Movement","StringencyIndex","Forecast"), names_to = "Variable")
ggplot(df.plot, aes(Date, value, colour = Variable)) +
geom_line()
p.now <- 3
q.now <- 3
df.real.test <- df.real %>%
filter(Country == "Greece") %>%
mutate(diff.Movement = c(NA, diff(Movement)),
diff.StringencyIndex = c(NA, diff(StringencyIndex))) %>%
na.omit()
ardl.now <-ardlDlm(formula = diff.Movement ~ diff.StringencyIndex,
data = df.real.test,
p = p.now , q = q.now)
ardl.now$model$coefficients
lr.coefficient.test <- sum(ardl.now$model$coefficients[c("diff.StringencyIndex.t",
paste0("diff.StringencyIndex.",1:p.now))]) /
(1-sum(ardl.now$model$coefficients[paste0("diff.Movement.",1:q.now)]))
lr.coefficient.test
forecast.test <- forecast(ardl.now, df.real.test$diff.StringencyIndex,
h = length(df.real.test$diff.StringencyIndex))
forecast.test.level <- diffinv(as.numeric(forecast.test$forecasts))
df.plot <- df.real.test %>%
mutate(Forecast = forecast.test.level[-1]) %>%
pivot_longer(cols = c("Movement","StringencyIndex","Forecast"), names_to = "Variable")
ggplot(df.plot, aes(Date, value, colour = Variable)) +
geom_line()
df.plot <- df.real.test %>%
mutate(Forecast = forecast.test.level[-1]) %>%
pivot_longer(cols = c("Movement","StringencyIndex","Forecast"), names_to = "Variable") %>%
select(Date, Country, Movement, StringencyIndex, Forecast)
df.plot <- df.real.test %>%
mutate(Forecast = forecast.test.level[-1]) %>%
pivot_longer(cols = c("Movement","StringencyIndex","Forecast"), names_to = "Variable") %>%
dplyr::select(Date, Country, Movement, StringencyIndex, Forecast)
df.plot <- df.real.test %>%
mutate(Forecast = forecast.test.level[-1]) %>%
pivot_longer(cols = c("Movement","StringencyIndex","Forecast"), names_to = "Variable") %>%
dplyr::select("Date", "Country", "Movement", "StringencyIndex", "Forecast")
df.plot <- df.real.test %>%
mutate(Forecast = forecast.test.level[-1]) %>%
pivot_longer(cols = c("Movement","StringencyIndex","Forecast"), names_to = "Variable")
df.real.test <- df.real %>%
filter(Country == "Greece") %>%
mutate(diff.Movement = c(NA, diff(Movement)),
diff.StringencyIndex = c(NA, diff(StringencyIndex))) %>%
na.omit()
df.real.diff <- df.real %>%
gorup_by(Country) %>%
mutate(diff.Movement = c(NA, diff(Movement)),
diff.StringencyIndex = c(NA, diff(StringencyIndex))) %>%
select(Country, Date, Movement, StringencyIndex, diff.Movement, diff.StringencyIndex) %>%
na.omit()
df.real.diff <- df.real %>%
group_by(Country) %>%
mutate(diff.Movement = c(NA, diff(Movement)),
diff.StringencyIndex = c(NA, diff(StringencyIndex))) %>%
select(Country, Date, Movement, StringencyIndex, diff.Movement, diff.StringencyIndex) %>%
na.omit()
ardl.now$model$coefficients
df.real.diff <- df.real %>%
group_by(Country) %>%
mutate(diff.Movement = c(NA, diff(Movement)),
diff.StringencyIndex = c(NA, diff(StringencyIndex))) %>%
select(Country, Date, Movement, StringencyIndex, diff.Movement, diff.StringencyIndex) %>%
na.omit()
list.forecast.collect <- list()
for (cty in unique(df.real.diff$Country)) {
df.now <- df.real.diff %>%
filter(Country == cty)
ardl.now <-ardlDlm(formula = diff.Movement ~ diff.StringencyIndex,
data = df.now,
p = p.now , q = q.now)
ardl.now$model$coefficients
lr.coefficient.now <- sum(ardl.now$model$coefficients[c("diff.StringencyIndex.t",
paste0("diff.StringencyIndex.",1:p.now))]) /
(1-sum(ardl.now$model$coefficients[paste0("diff.Movement.",1:q.now)]))
forecast.now <- forecast(ardl.now, df.now$diff.StringencyIndex,
h = length(df.now$diff.StringencyIndex))
forecast.test.integrate <- diffinv(as.numeric(forecast.test$forecasts))
df.now <- df.now %>%
mutate(Forecast = forecast.test.integrate[-1])
list.forecast.collect[[cty]] <- df.now
}
View(df.now)
length(df.now$diff.StringencyIndex)
for (cty in unique(df.real.diff$Country)) {
df.now <- df.real.diff %>%
filter(Country == cty)
ardl.now <-ardlDlm(formula = diff.Movement ~ diff.StringencyIndex,
data = df.now,
p = p.now , q = q.now)
ardl.now$model$coefficients
lr.coefficient.now <- sum(ardl.now$model$coefficients[c("diff.StringencyIndex.t",
paste0("diff.StringencyIndex.",1:p.now))]) /
(1-sum(ardl.now$model$coefficients[paste0("diff.Movement.",1:q.now)]))
forecast.now <- forecast(ardl.now, df.now$diff.StringencyIndex,
h = length(df.now$diff.StringencyIndex))
forecast.test.integrate <- diffinv(as.numeric(forecast.now$forecasts))
df.now <- df.now %>%
mutate(Forecast = forecast.test.integrate[-1])
list.forecast.collect[[cty]] <- df.now
}
View(df.real.diff)
df.now <- df.real.diff %>%
filter(Country == cty)
ardl.now <-ardlDlm(formula = diff.Movement ~ diff.StringencyIndex,
data = df.now,
p = p.now , q = q.now)
View(df.now)
ardl.now
df.now <- df.real.diff %>%
filter(Country == cty) %>%
ardl.now <-ardlDlm(formula = diff.Movement ~ diff.StringencyIndex,
data = df.now[[-"Country"]],
p = p.now , q = q.now)
View(df.now)
df.now <- df.real.diff %>%
filter(Country == cty) %>%
ardl.now <-ardlDlm(formula = diff.Movement ~ diff.StringencyIndex,
data = df.now[,-"Country"],
p = p.now , q = q.now)
df.now <- df.real.diff %>%
filter(Country == cty) %>%
ardl.now <-ardlDlm(formula = diff.Movement ~ diff.StringencyIndex,
data = df.now[,-1],
p = p.now , q = q.now)
df.now <- df.real.diff %>%
filter(Country == cty) %>%
ardl.now <-ardlDlm(formula = diff.Movement ~ diff.StringencyIndex,
data = df.now[-1,],
p = p.now , q = q.now)
df.now <- df.real.diff %>%
filter(Country == cty) %>%
ardl.now <-ardlDlm(formula = diff.Movement ~ diff.StringencyIndex,
data = df.now,
p = p.now , q = q.now)
df.now <- df.real.diff %>%
filter(Country == cty) %>%
ardl.now <-ardlDlm(formula = diff.Movement ~ diff.StringencyIndex,
data = df.now,
p = p.now , q = q.now)
ardl.now <-ardlDlm(formula = diff.Movement ~ diff.StringencyIndex,
data = df.now[,-1],
p = p.now , q = q.now)
df.now <- df.real.diff %>%
filter(Country == cty)
ardl.now <-ardlDlm(formula = diff.Movement ~ diff.StringencyIndex,
data = df.now[,-1],
p = p.now , q = q.now)
p.now <- 3
q.now <- 3
df.real.diff <- df.real %>%
group_by(Country) %>%
mutate(diff.Movement = c(NA, diff(Movement)),
diff.StringencyIndex = c(NA, diff(StringencyIndex))) %>%
select(Country, Date, Movement, StringencyIndex, diff.Movement, diff.StringencyIndex) %>%
na.omit()
list.forecast.collect <- list()
for (cty in unique(df.real.diff$Country)) {
df.now <- df.real.diff %>%
filter(Country == cty)
ardl.now <-ardlDlm(formula = diff.Movement ~ diff.StringencyIndex,
data = df.now[,-1],
p = p.now , q = q.now)
ardl.now$model$coefficients
lr.coefficient.now <- sum(ardl.now$model$coefficients[c("diff.StringencyIndex.t",
paste0("diff.StringencyIndex.",1:p.now))]) /
(1-sum(ardl.now$model$coefficients[paste0("diff.Movement.",1:q.now)]))
forecast.now <- forecast(ardl.now, df.now$diff.StringencyIndex,
h = length(df.now$diff.StringencyIndex))
forecast.test.integrate <- diffinv(as.numeric(forecast.now$forecasts))
df.now <- df.now %>%
mutate(Forecast = forecast.test.integrate[-1])
list.forecast.collect[[cty]] <- df.now
}
df.plot <- df.real.test %>%
pivot_longer(cols = c("Movement","StringencyIndex","Forecast"), names_to = "Variable")
df.forecasts <- bind_rows(list.forecast.collect)
df.plot <- df.forecasts %>%
pivot_longer(cols = c("Movement","StringencyIndex","Forecast"), names_to = "Variable")
ggplot(df.plot, aes(Date, value, colour = Variable)) +
geom_line() +
theme_bw() +
facet_wrap(~Country)
df.plot <- df.forecasts %>%
pivot_longer(cols = c("Movement","StringencyIndex","Forecast"), names_to = "Variable") %>%
filter(Country %in% c("United Kingdom", "United States", "Germany", "Greece", "Zimbabwe", "Russia"))
ggplot(df.plot, aes(Date, value, colour = Variable)) +
geom_line() +
theme_bw() +
facet_wrap(~Country)
collect.lr.coeffs <- data.frame(Country = unique(df.real.diff$Country))
collect.lr.coeffs
p.now <- 3
q.now <- 3
df.real.diff <- df.real %>%
group_by(Country) %>%
mutate(diff.Movement = c(NA, diff(Movement)),
diff.StringencyIndex = c(NA, diff(StringencyIndex))) %>%
select(Country, Date, Movement, StringencyIndex, diff.Movement, diff.StringencyIndex) %>%
na.omit()
list.forecast.collect <- list()
collect.lr.coeffs <- data.frame(Country = unique(df.real.diff$Country))
collect.lr.coeffs
collect.lr.coeffs
collect.lr.coeffs <- data.frame(Country = unique(df.real.diff$Country),
lr.coeff = NA)
collect.lr.coeffs
for (cty in unique(df.real.diff$Country)) {
df.now <- df.real.diff %>%
filter(Country == cty)
ardl.now <-ardlDlm(formula = diff.Movement ~ diff.StringencyIndex,
data = df.now[,-1],
p = p.now , q = q.now)
ardl.now$model$coefficients
lr.coefficient.now <- sum(ardl.now$model$coefficients[c("diff.StringencyIndex.t",
paste0("diff.StringencyIndex.",1:p.now))]) /
(1-sum(ardl.now$model$coefficients[paste0("diff.Movement.",1:q.now)]))
forecast.now <- forecast(ardl.now, df.now$diff.StringencyIndex,
h = length(df.now$diff.StringencyIndex))
forecast.test.integrate <- diffinv(as.numeric(forecast.now$forecasts))
df.now <- df.now %>%
mutate(Forecast = forecast.test.integrate[-1])
list.forecast.collect[[cty]] <- df.now
collect.lr.coeffs[which(collect.lr.coeffs$Country == cty),"lr.coeff"] <- lr.coefficient.now
}
p.now <- 3
q.now <- 3
df.real.diff <- df.real %>%
group_by(Country) %>%
mutate(diff.Movement = c(NA, diff(Movement)),
diff.StringencyIndex = c(NA, diff(StringencyIndex))) %>%
select(Country, Date, Movement, StringencyIndex, diff.Movement, diff.StringencyIndex) %>%
na.omit()
list.forecast.collect <- list()
collect.lr.coeffs <- data.frame(Country = unique(df.real.diff$Country),
lr.coeff = NA)
for (cty in unique(df.real.diff$Country)) {
df.now <- df.real.diff %>%
filter(Country == cty)
ardl.now <-ardlDlm(formula = diff.Movement ~ diff.StringencyIndex,
data = df.now[,-1],
p = p.now , q = q.now)
ardl.now$model$coefficients
lr.coefficient.now <- sum(ardl.now$model$coefficients[c("diff.StringencyIndex.t",
paste0("diff.StringencyIndex.",1:p.now))]) /
(1-sum(ardl.now$model$coefficients[paste0("diff.Movement.",1:q.now)]))
forecast.now <- forecast(ardl.now, df.now$diff.StringencyIndex,
h = length(df.now$diff.StringencyIndex))
forecast.test.integrate <- diffinv(as.numeric(forecast.now$forecasts))
df.now <- df.now %>%
mutate(Forecast = forecast.test.integrate[-1])
list.forecast.collect[[cty]] <- df.now
collect.lr.coeffs[which(collect.lr.coeffs$Country == cty),"lr.coeff"] <- lr.coefficient.now
}
df.forecasts <- bind_rows(list.forecast.collect)
countries.to.plot <- c("United Kingdom", "United States", "Germany", "Greece", "Zimbabwe", "Russia")
df.plot <- df.forecasts %>%
pivot_longer(cols = c("Movement","StringencyIndex","Forecast"), names_to = "Variable") %>%
filter(Country %in% countries.to.plot)
ggplot(df.plot, aes(Date, value, colour = Variable)) +
geom_line() +
theme_bw() +
facet_wrap(~Country)
p.now <- 3
q.now <- 3
df.real.diff <- df.real %>%
group_by(Country) %>%
mutate(diff.Movement = c(NA, diff(Movement)),
diff.StringencyIndex = c(NA, diff(StringencyIndex))) %>%
select(Country, Date, Movement, StringencyIndex, diff.Movement, diff.StringencyIndex) %>%
na.omit()
list.forecast.collect <- list()
collect.lr.coeffs <- data.frame(Country = unique(df.real.diff$Country),
lr.coeff = NA)
for (cty in unique(df.real.diff$Country)) {
df.now <- df.real.diff %>%
filter(Country == cty)
ardl.now <-ardlDlm(formula = diff.Movement ~ diff.StringencyIndex,
data = df.now[,-1],
p = p.now , q = q.now)
ardl.now$model$coefficients
lr.coefficient.now <- sum(ardl.now$model$coefficients[c("diff.StringencyIndex.t",
paste0("diff.StringencyIndex.",1:p.now))]) /
(1-sum(ardl.now$model$coefficients[paste0("diff.Movement.",1:q.now)]))
forecast.now <- forecast(ardl.now, df.now$diff.StringencyIndex,
h = length(df.now$diff.StringencyIndex))
forecast.test.integrate <- diffinv(as.numeric(forecast.now$forecasts))
df.now <- df.now %>%
mutate(Forecast = forecast.test.integrate[-1])
list.forecast.collect[[cty]] <- df.now
collect.lr.coeffs[which(collect.lr.coeffs$Country == cty),"lr.coeff"] <- lr.coefficient.now
}
df.forecasts <- bind_rows(list.forecast.collect)
countries.to.plot <- c("United Kingdom", "United States", "Germany", "Greece", "Zimbabwe", "Russia")
df.plot <- df.forecasts %>%
pivot_longer(cols = c("Movement","StringencyIndex","Forecast"), names_to = "Variable") %>%
filter(Country %in% countries.to.plot)
ggplot(df.plot, aes(Date, value, colour = Variable)) +
geom_line() +
theme_bw() +
facet_wrap(~Country)
print("Long-run coefficients:")
print(collect.lr.coeffs[which(collect.lr.coeffs$Country == countries.to.plot),])
print(collect.lr.coeffs[which(collect.lr.coeffs$Country %in% countries.to.plot),])
p.now <- 3
q.now <- 3
df.real.diff <- df.real %>%
group_by(Country) %>%
mutate(diff.Movement = c(NA, diff(Movement)),
diff.StringencyIndex = c(NA, diff(StringencyIndex))) %>%
select(Country, Date, Movement, StringencyIndex, diff.Movement, diff.StringencyIndex) %>%
na.omit()
list.forecast.collect <- list()
collect.lr.coeffs <- data.frame(Country = unique(df.real.diff$Country),
lr.coeff = NA)
for (cty in unique(df.real.diff$Country)) {
df.now <- df.real.diff %>%
filter(Country == cty)
ardl.now <-ardlDlm(formula = diff.Movement ~ diff.StringencyIndex,
data = df.now[,-1],
p = p.now , q = q.now)
ardl.now$model$coefficients
lr.coefficient.now <- sum(ardl.now$model$coefficients[c("diff.StringencyIndex.t",
paste0("diff.StringencyIndex.",1:p.now))]) /
(1-sum(ardl.now$model$coefficients[paste0("diff.Movement.",1:q.now)]))
forecast.now <- forecast(ardl.now, df.now$diff.StringencyIndex,
h = length(df.now$diff.StringencyIndex))
forecast.test.integrate <- diffinv(as.numeric(forecast.now$forecasts))
df.now <- df.now %>%
mutate(Forecast = forecast.test.integrate[-1])
list.forecast.collect[[cty]] <- df.now
collect.lr.coeffs[which(collect.lr.coeffs$Country == cty),"lr.coeff"] <- lr.coefficient.now
}
df.forecasts <- bind_rows(list.forecast.collect)
countries.to.plot <- c("United Kingdom", "United States", "Germany", "Greece", "Zimbabwe", "Sweden")
df.plot <- df.forecasts %>%
pivot_longer(cols = c("Movement","StringencyIndex","Forecast"), names_to = "Variable") %>%
filter(Country %in% countries.to.plot)
ggplot(df.plot, aes(Date, value, colour = Variable)) +
geom_line() +
theme_bw() +
facet_wrap(~Country)
print("Long-run coefficients:")
print(collect.lr.coeffs[which(collect.lr.coeffs$Country %in% countries.to.plot),])
p.now <- 3
q.now <- 3
df.real.diff <- df.real %>%
group_by(Country) %>%
mutate(diff.Movement = c(NA, diff(Movement)),
diff.StringencyIndex = c(NA, diff(StringencyIndex))) %>%
select(Country, Date, Movement, StringencyIndex, diff.Movement, diff.StringencyIndex) %>%
na.omit()
list.forecast.collect <- list()
collect.lr.coeffs <- data.frame(Country = unique(df.real.diff$Country),
lr.coeff = NA)
for (cty in unique(df.real.diff$Country)) {
df.now <- df.real.diff %>%
filter(Country == cty)
ardl.now <-ardlDlm(formula = diff.Movement ~ diff.StringencyIndex,
data = df.now[,-1],
p = p.now , q = q.now)
ardl.now$model$coefficients
lr.coefficient.now <- sum(ardl.now$model$coefficients[c("diff.StringencyIndex.t",
paste0("diff.StringencyIndex.",1:p.now))]) /
(1-sum(ardl.now$model$coefficients[paste0("diff.Movement.",1:q.now)]))
forecast.now <- forecast(ardl.now, df.now$diff.StringencyIndex,
h = length(df.now$diff.StringencyIndex))
forecast.test.integrate <- diffinv(as.numeric(forecast.now$forecasts))
df.now <- df.now %>%
mutate(Forecast = forecast.test.integrate[-1])
list.forecast.collect[[cty]] <- df.now
collect.lr.coeffs[which(collect.lr.coeffs$Country == cty),"lr.coeff"] <- lr.coefficient.now
}
df.forecasts <- bind_rows(list.forecast.collect)
countries.to.plot <- c("United Kingdom", "United States", "Germany", "Greece", "Zimbabwe", "South Korea")
df.plot <- df.forecasts %>%
pivot_longer(cols = c("Movement","StringencyIndex","Forecast"), names_to = "Variable") %>%
filter(Country %in% countries.to.plot)
ggplot(df.plot, aes(Date, value, colour = Variable)) +
geom_line() +
theme_bw() +
facet_wrap(~Country)
print("Long-run coefficients:")
print(collect.lr.coeffs[which(collect.lr.coeffs$Country %in% countries.to.plot),])
print("hihihi")
for (i in NULL) {
print("hihihi")
}
for (i in NULL) {
print("hihihi")
}
for (i in 1:3) {
print("hihihi")
}
?lm
source('~/.active-rstudio-document', echo=TRUE)
rm(list = ls())
knitr::opts_chunk$set(echo = TRUE)
library("tidyverse")
library("sjPlot")
source("ARDL_fun.R")
ARDL_cov <- readRDS("ARDL_cov_03092020.Rds")
str(ARDL_cov,1)
head(ARDL_cov$summary)
ARDL_cov$summary %>%
summarise(average.p = mean(p.best),
average.q = mean(q.best))
summary(ARDL_cov$summary$LongRunCoefficient)
df.plot<- ARDL_cov$summary %>%
mutate(ObsUnit = forcats::fct_reorder(ObsUnit,-LongRunCoefficient))
ggplot(df.plot,
aes(x = LongRunCoefficient)) +
geom_histogram(aes(y = ..density..), fill = "grey") +
geom_density(color = "red") +
theme_bw()
sum(ARDL_cov$summary$LongRunCoefficient>0)
setwd("..")
source("ImportLong.r")
getwd()
setwd("C:/Users/lnlro/Dropbox/Research/COVID-19/COVID-19/code")
setwd("..")
getwd()
setwd("..")
getwd()
setwd("..")
getwd()
source("ImportLong.r")
source("ImportLong.r")
df2<-df%>%
filter(!is.na(StringencyIndex),!is.na(Movement))
library("plyr")
