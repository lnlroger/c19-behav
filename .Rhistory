#Gets rid of double entries
GpsGoog<-GpsGoo%>%
group_by(lat,lon)%>%
summarise_all(first)%>%
ungroup()%>%
group_by(Country)
#Gets rid of double entries
GpsGoog<-GpsGoo%>%
group_by(lat,lon)%>%
summarise_all(first)%>%
ungroup()%>%
group_by(Country.x)
groups_n(GpsGoog)
n_groups(GpsGoog)
groups(GpsGoog)
group_vars(GpsGoog)
GpsGoog$Country.x
levels(GpsGoog$Country.x)
n_groups(GpsGoog)
n_groups(gps_coord)
n_groups(interGPS_Google)
n_groups(interGoogle_GPS)
View(GpsGoo)
#Gets rid of double entries
GpsGoog<-GpsGoo%>%
group_by(lat,lon)%>%
summarise_all(first)%>%
ungroup()%>%
group_by(Country.x)
n_groups(GpsGoog)
View(GpsGoog)
interGoogle_GPS<-short_mob%>%
filter(Country %in% gps_coord$Country)%>%
group_by(Country)%>%
mutate(number=n())
n_groups(interGoogle_GPS) #Good, back to 53, though, we prob. don't have city-level info for Croatia's GPS.
interGPS_Google<-gps_coord%>%
filter(Country %in% mobility_regional$Country)%>%
group_by(Country)%>%
mutate(number=n())
n_groups(interGPS_Google)
GpsGoo<-
fuzzy_inner_join(interGPS_Google, interGoogle_GPS,
by=c("lat"="SouthHalf", "lat"="NorthHalf","lon"="WestHalf","lon"="EastHalf"),
match_fun=list(`>=`, `<=`,`>=`,`<=`))
#Gets rid of double entries
GpsGoog<-GpsGoo%>%
group_by(lat,lon)%>%
summarise_all(first)%>%
ungroup()%>%
group_by(Country.x)
n_groups(GpsGoog)
View(GpsGoog)
missing<-GpsGoog%>%
filter(is.na(Lat))
View(GpsGoog)
missing<-interGPS_Google%>%
filter(is.na(Î»at))
missing<-interGPS_Google%>%
filter(is.na(lat))
View(missing)
geocode("Chugoku")
geocode("San'yo Chiho")
geocode("San-in")
missing$City
missing$Location
missing<-gps_coord%>%
filter(is.na(lat))
geocode(Shimonoseki, Japan)
geocode("Shimonoseki, Japan")
missing<-gps_coord%>%
filter(is.na(lat))%>%
recode_factor(Location,`Chugoku, Japan`="Shimonoseki, Japan")
missing$Country
missing$Location
missing<-gps_coord%>%
filter(is.na(lat))%>%
recode_factor(Location,Chugoku, Japan="Shimonoseki, Japan")
missing<-gps_coord%>%
filter(is.na(lat))%>%
recode(Location,Chugoku, Japan="Shimonoseki, Japan")
missing<-gps_coord%>%
filter(is.na(lat))%>%
rename("Shimonoseki, Japan"="Chugoku, Japan")
missing<-gps_coord%>%
filter(is.na(lat))%>%
plyr::revalue("Shimonoseki, Japan"="Chugoku, Japan")
missing<-gps_coord%>%
filter(is.na(lat))%>%
plyr::revalue(Location,"Shimonoseki, Japan"="Chugoku, Japan")
missing<-gps_coord%>%
filter(is.na(lat))%>%
plyr::revalue(Location,"Chugoku, Japan"="Shimonoseki, Japan")
missing<-gps_coord%>%
filter(is.na(lat))%>%
plyr::mapvalues(Location,from="Chugoku, Japan", to="Shimonoseki, Japan")
missing<-gps_coord%>%
filter(is.na(lat))%>%
plyr::mapvalues(missing$Location,from="Chugoku, Japan", to="Shimonoseki, Japan")
class(missing$Location)
missing$Location
missing<-gps_coord%>%
filter(is.na(lat))%>%
plyr::mapvalues(missing$Location,from="Chugoku, Japan", to="Shimonoseki, Japan")
missing<-gps_coord%>%
filter(is.na(lat))%>%
plyr::mapvalues(Location,from="Chugoku, Japan", to="Shimonoseki, Japan")
missing<-gps_coord%>%
filter(is.na(lat))%>%
plyr::mapvalues(Location,from=c("Chugoku, Japan"), to=c("Shimonoseki, Japan"))
missing<-gps_coord%>%
filter(is.na(lat))%>%
mutate(Location=recode(Location,Chugoku, Japan""Shimonoseki, Japan")
mutate(Location=recode(Location,Chugoku, Japan="Shimonoseki, Japan")
missing<-gps_coord%>%
filter(is.na(lat))%>%
mutate(Location=recode(Location,Chugoku, Japan="Shimonoseki, Japan"))
missing<-gps_coord%>%
filter(is.na(lat))%>%
mutate(Location=recode(Location,Chugoku, Japan = "Shimonoseki, Japan"))
missing<-gps_coord%>%
filter(is.na(lat))%>%
mutate(Location=recode(Location,Shimonoseki, Japan= "Chugoku, Japan"))
mutate(Location=recode(Location,"Chugoku, Japan"="Shimonoseki, Japan")
missing<-gps_coord%>%
filter(is.na(lat))%>%
mutate(Location=recode(Location,"Chugoku, Japan"="Shimonoseki, Japan"))
missing$Location
geocode(missing$Location[1])
geocode(missing$Location[2])
missing$Location[1]
missing$Location[[1]]
missing$Location[[[1]]]
geocode(missing$Location[[1]])
geocode("Athens")
geocode(gps_coord$Location[1])
geocode(as.character(gps_coord$Location[1]))
geocode(as.character(missing$Location[1]))
missing$Location
geocode("Central Coast, Peru")
geocode("Costa Centro, Peru")
geocode("Lima Metropolitana, Peru")
geocode("Middle Norrland, Sweden ")
geocode("Sundsvall, Sweden ")
geocode(Gavle, Sweden)
geocode("Gavle, Sweden")
missing$Location
geocode("North-Western, Venezuela ")
"Zone VI: Andean, Venezuela" = "Andean, Venezuela" ,
missing<-gps_coord%>%
filter(is.na(lat))%>%
mutate(Location=recode(Location,"Chugoku, Japan"="Shimonoseki, Japan",
"Costa Centro (Central Coast), Peru" ="Costa Centro, Peru",
"Costa Norte (North Coast), Peru = Costa Norte, Peru",
"Lima Metropolitana (Lima Metropolis), Peru" = "Lima Metropolitana, Peru",
"Sierra Norte (North Sierra/ North Mountain), Peru"="Sierra Norte, Peru",
"Mellersta Norrland, Sweden" = "Sundsvall, Sweden",
"Norra Mellansverige, Sweden" = "Gavle, Sweden",
"Ostra Mellansverige, Sweden" = "Uppsala, Sweden",
"Vastverige, Sweden"="Gothenburg, Sweden",
"Espace Mittelland, Switzerland" = "Bern, Switzerland",
"East Midlands, United Kingdom" = "Nottingham, United Kingdom",
"East of England, United Kingdom" = "Norwich, United Kingdom",
"North East, United Kingdom" = "Newcastle, United Kingdom",
"North West, United Kingdom "= "Manchester, United Kingdom",
"Zone II: North-Western, Venezuela"="North-Western, Venezuela",
"Zone III: Eastern, Venezuela" = "Eastern, Venezuela",
"Zone IV: Centre Llano, Venezuela " = "Centre Llano, Venezuela ",
"Zone VI: Andean, Venezuela" = "Andean, Venezuela"
))
#loc<-mutate_geocode(social_prefs_city,Location,output="more")
#write.csv(loc,"SocialPrefsGeo.csv")
gps_coord<-read.csv("Briq/SocialPrefsGeo.csv")%>%
group_by(Country)
missing<-gps_coord%>%
filter(is.na(lat))%>%
mutate(Location=recode(Location,"Chugoku, Japan"="Shimonoseki, Japan",
"Costa Centro (Central Coast), Peru" ="Costa Centro, Peru",
"Costa Norte (North Coast), Peru = Costa Norte, Peru",
"Lima Metropolitana (Lima Metropolis), Peru" = "Lima Metropolitana, Peru",
"Sierra Norte (North Sierra/ North Mountain), Peru"="Sierra Norte, Peru",
"Mellersta Norrland, Sweden" = "Sundsvall, Sweden",
"Norra Mellansverige, Sweden" = "Gavle, Sweden",
"Ostra Mellansverige, Sweden" = "Uppsala, Sweden",
"Vastverige, Sweden"="Gothenburg, Sweden",
"Espace Mittelland, Switzerland" = "Bern, Switzerland",
"East Midlands, United Kingdom" = "Nottingham, United Kingdom",
"East of England, United Kingdom" = "Norwich, United Kingdom",
"North East, United Kingdom" = "Newcastle, United Kingdom",
"North West, United Kingdom "= "Manchester, United Kingdom",
"Zone II: North-Western, Venezuela"="North-Western, Venezuela",
"Zone III: Eastern, Venezuela" = "Eastern, Venezuela",
"Zone IV: Centre Llano, Venezuela " = "Centre Llano, Venezuela ",
"Zone VI: Andean, Venezuela" = "Andean, Venezuela"
))
missing$Location
missing<-gps_coord%>%
filter(is.na(lat))
rm(missing)
missing<-gps_coord%>%
filter(is.na(lat))%>%
mutate(Location=recode(Location,"Chugoku, Japan"="Shimonoseki, Japan",
"Costa Centro (Central Coast), Peru" ="Costa Centro, Peru",
"Costa Norte (North Coast), Peru = Costa Norte, Peru",
"Lima Metropolitana (Lima Metropolis), Peru" = "Lima Metropolitana, Peru",
"Sierra Norte (North Sierra/ North Mountain), Peru"="Sierra Norte, Peru",
"Mellersta Norrland, Sweden" = "Sundsvall, Sweden",
"Norra Mellansverige, Sweden" = "Gavle, Sweden",
"Ostra Mellansverige, Sweden" = "Uppsala, Sweden",
"Vastverige, Sweden"="Gothenburg, Sweden",
"Espace Mittelland, Switzerland" = "Bern, Switzerland",
"East Midlands, United Kingdom" = "Nottingham, United Kingdom",
"East of England, United Kingdom" = "Norwich, United Kingdom",
"North East, United Kingdom" = "Newcastle, United Kingdom",
"North West, United Kingdom "= "Manchester, United Kingdom",
"Zone II: North-Western, Venezuela"="North-Western, Venezuela",
"Zone III: Eastern, Venezuela" = "Eastern, Venezuela",
"Zone IV: Centre Llano, Venezuela " = "Centre Llano, Venezuela ",
"Zone VI: Andean, Venezuela" = "Andean, Venezuela"
))
missing<-gps_coord%>%
filter(is.na(lat))%>%
mutate(Location=recode_factor(Location,"Chugoku, Japan"="Shimonoseki, Japan",
"Costa Centro (Central Coast), Peru" ="Costa Centro, Peru",
"Costa Norte (North Coast), Peru = Costa Norte, Peru",
"Lima Metropolitana (Lima Metropolis), Peru" = "Lima Metropolitana, Peru",
"Sierra Norte (North Sierra/ North Mountain), Peru"="Sierra Norte, Peru",
"Mellersta Norrland, Sweden" = "Sundsvall, Sweden",
"Norra Mellansverige, Sweden" = "Gavle, Sweden",
"Ostra Mellansverige, Sweden" = "Uppsala, Sweden",
"Vastverige, Sweden"="Gothenburg, Sweden",
"Espace Mittelland, Switzerland" = "Bern, Switzerland",
"East Midlands, United Kingdom" = "Nottingham, United Kingdom",
"East of England, United Kingdom" = "Norwich, United Kingdom",
"North East, United Kingdom" = "Newcastle, United Kingdom",
"North West, United Kingdom "= "Manchester, United Kingdom",
"Zone II: North-Western, Venezuela"="North-Western, Venezuela",
"Zone III: Eastern, Venezuela" = "Eastern, Venezuela",
"Zone IV: Centre Llano, Venezuela " = "Centre Llano, Venezuela ",
"Zone VI: Andean, Venezuela" = "Andean, Venezuela"
))
missing
missing<-gps_coord%>%
filter(is.na(lat))%>%
mutate(Location=dplyr::recode_factor(Location,"Chugoku, Japan"="Shimonoseki, Japan",
"Costa Centro (Central Coast), Peru" ="Costa Centro, Peru",
"Costa Norte (North Coast), Peru = Costa Norte, Peru",
"Lima Metropolitana (Lima Metropolis), Peru" = "Lima Metropolitana, Peru",
"Sierra Norte (North Sierra/ North Mountain), Peru"="Sierra Norte, Peru",
"Mellersta Norrland, Sweden" = "Sundsvall, Sweden",
"Norra Mellansverige, Sweden" = "Gavle, Sweden",
"Ostra Mellansverige, Sweden" = "Uppsala, Sweden",
"Vastverige, Sweden"="Gothenburg, Sweden",
"Espace Mittelland, Switzerland" = "Bern, Switzerland",
"East Midlands, United Kingdom" = "Nottingham, United Kingdom",
"East of England, United Kingdom" = "Norwich, United Kingdom",
"North East, United Kingdom" = "Newcastle, United Kingdom",
"North West, United Kingdom "= "Manchester, United Kingdom",
"Zone II: North-Western, Venezuela"="North-Western, Venezuela",
"Zone III: Eastern, Venezuela" = "Eastern, Venezuela",
"Zone IV: Centre Llano, Venezuela " = "Centre Llano, Venezuela ",
"Zone VI: Andean, Venezuela" = "Andean, Venezuela"
))
missing<-gps_coord%>%
filter(is.na(lat))%>%
mutate(Location=dplyr::recode_factor(Location,"Chugoku, Japan"="Shimonoseki, Japan")
)
missing<-gps_coord%>%
filter(is.na(lat))%>%
mutate(Location=dplyr::recode_factor(Location,"Chugoku, Japan"="Shimonoseki, Japan",
"Costa Centro (Central Coast), Peru" ="Costa Centro, Peru"
)
)
missing$Location
missing<-gps_coord%>%
filter(is.na(lat))%>%
mutate(Location=dplyr::recode_factor(Location,"Chugoku, Japan"="Shimonoseki, Japan",
"Costa Centro (Central Coast), Peru" ="Costa Centro, Peru",
"Costa Norte (North Coast), Peru = Costa Norte, Peru",
"Lima Metropolitana (Lima Metropolis), Peru" = "Lima Metropolitana, Peru",
"Sierra Norte (North Sierra/ North Mountain), Peru"="Sierra Norte, Peru",
"Mellersta Norrland, Sweden" = "Sundsvall, Sweden",
"Norra Mellansverige, Sweden" = "Gavle, Sweden",
"Ostra Mellansverige, Sweden" = "Uppsala, Sweden",
"Vastverige, Sweden"="Gothenburg, Sweden",
"Espace Mittelland, Switzerland" = "Bern, Switzerland",
"East Midlands, United Kingdom" = "Nottingham, United Kingdom",
"East of England, United Kingdom" = "Norwich, United Kingdom",
"North East, United Kingdom" = "Newcastle, United Kingdom",
"North West, United Kingdom "= "Manchester, United Kingdom"
)
)
missing<-gps_coord%>%
filter(is.na(lat))%>%
mutate(Location=dplyr::recode_factor(Location,"Chugoku, Japan"="Shimonoseki, Japan",
"Costa Centro (Central Coast), Peru" ="Costa Centro, Peru",
"Costa Norte (North Coast), Peru = Costa Norte, Peru",
"Lima Metropolitana (Lima Metropolis), Peru" = "Lima Metropolitana, Peru",
"Sierra Norte (North Sierra/ North Mountain), Peru"="Sierra Norte, Peru",
"Mellersta Norrland, Sweden" = "Sundsvall, Sweden",
"Norra Mellansverige, Sweden" = "Gavle, Sweden",
"Ostra Mellansverige, Sweden" = "Uppsala, Sweden"
)
)
missing<-gps_coord%>%
filter(is.na(lat))%>%
mutate(Location=dplyr::recode_factor(Location,"Chugoku, Japan"="Shimonoseki, Japan",
"Costa Centro (Central Coast), Peru" ="Costa Centro, Peru",
"Costa Norte (North Coast), Peru = Costa Norte, Peru",
"Lima Metropolitana (Lima Metropolis), Peru" = "Lima Metropolitana, Peru",
"Sierra Norte (North Sierra/ North Mountain), Peru"="Sierra Norte, Peru"
)
)
missing<-gps_coord%>%
filter(is.na(lat))%>%
mutate(Location=dplyr::recode_factor(Location,"Chugoku, Japan"="Shimonoseki, Japan",
"Costa Centro (Central Coast), Peru" ="Costa Centro, Peru",
"Costa Norte (North Coast), Peru = Costa Norte, Peru",
"Lima Metropolitana (Lima Metropolis), Peru" = "Lima Metropolitana, Peru"
)
)
missing<-gps_coord%>%
filter(is.na(lat))%>%
mutate(Location=dplyr::recode_factor(Location,"Chugoku, Japan"="Shimonoseki, Japan",
"Costa Centro (Central Coast), Peru" ="Costa Centro, Peru",
"Costa Norte (North Coast), Peru = Costa Norte, Peru"
))
missing<-gps_coord%>%
filter(is.na(lat))%>%
mutate(Location=dplyr::recode_factor(Location,"Chugoku, Japan"="Shimonoseki, Japan",
"Costa Centro (Central Coast), Peru" ="Costa Centro, Peru"
)
)
missing<-gps_coord%>%
filter(is.na(lat))%>%
mutate(Location=dplyr::recode_factor(Location,"Chugoku, Japan"="Shimonoseki, Japan",
"Costa Centro (Central Coast), Peru" ="Costa Centro, Peru",
"Costa Norte (North Coast), Peru" = "Costa Norte, Peru",
"Lima Metropolitana (Lima Metropolis), Peru" = "Lima Metropolitana, Peru",
"Sierra Norte (North Sierra/ North Mountain), Peru"="Sierra Norte, Peru",
"Mellersta Norrland, Sweden" = "Sundsvall, Sweden",
"Norra Mellansverige, Sweden" = "Gavle, Sweden",
"Ostra Mellansverige, Sweden" = "Uppsala, Sweden",
"Vastverige, Sweden"="Gothenburg, Sweden",
"Espace Mittelland, Switzerland" = "Bern, Switzerland",
"East Midlands, United Kingdom" = "Nottingham, United Kingdom",
"East of England, United Kingdom" = "Norwich, United Kingdom",
"North East, United Kingdom" = "Newcastle, United Kingdom",
"North West, United Kingdom "= "Manchester, United Kingdom",
"Zone II: North-Western, Venezuela"="North-Western, Venezuela",
"Zone III: Eastern, Venezuela" = "Eastern, Venezuela",
"Zone IV: Centre Llano, Venezuela " = "Centre Llano, Venezuela ",
"Zone VI: Andean, Venezuela" = "Andean, Venezuela"
))
missing$Location
missing_loc<-missing%>%
dplyr::select(X:Location)
missing_loc<-missing%>%
dplyr::select(X:Location)%>%
mutate_geocode(missing, Location, output="more")
class(gps_coord$Location)
class(missing$Location)
x<-as.cha
x<-as.character(missing$Location)
missing<-gps_coord%>%
filter(is.na(lat))%>%
mutate(Location=dplyr::recode_factor(Location,"Chugoku, Japan"="Shimonoseki, Japan",
"Costa Centro (Central Coast), Peru" ="Costa Centro, Peru",
"Costa Norte (North Coast), Peru" = "Costa Norte, Peru",
"Lima Metropolitana (Lima Metropolis), Peru" = "Lima Metropolitana, Peru",
"Sierra Norte (North Sierra/ North Mountain), Peru"="Sierra Norte, Peru",
"Mellersta Norrland, Sweden" = "Sundsvall, Sweden",
"Norra Mellansverige, Sweden" = "Gavle, Sweden",
"Ostra Mellansverige, Sweden" = "Uppsala, Sweden",
"Vastverige, Sweden"="Gothenburg, Sweden",
"Espace Mittelland, Switzerland" = "Bern, Switzerland",
"East Midlands, United Kingdom" = "Nottingham, United Kingdom",
"East of England, United Kingdom" = "Norwich, United Kingdom",
"North East, United Kingdom" = "Newcastle, United Kingdom",
"North West, United Kingdom "= "Manchester, United Kingdom",
"Zone II: North-Western, Venezuela"="North-Western, Venezuela",
"Zone III: Eastern, Venezuela" = "Eastern, Venezuela",
"Zone IV: Centre Llano, Venezuela " = "Centre Llano, Venezuela ",
"Zone VI: Andean, Venezuela" = "Andean, Venezuela"
))%>%
mutate(Location=as.character(Location))
missing_loc<-missing%>%
dplyr::select(X:Location)%>%
mutate_geocode(missing, Location, output="more")
class(missing$Location)
social_prefs_city<-read.csv("Briq/Ind_level_v11.csv")%>%
rename(Country=country)%>%
rename(City=region)%>%
mutate(Country=countrycode(Country,"country.name","country.name"))%>%
group_by(Country,City)%>%
summarise_at(vars(wgt:subj_math_skills),mean,na.rm=TRUE)
social_prefs_city$City<-gsub("\\,.*","",social_prefs_city$City) #There were ", excl Toronto" that are misinterpreted by Google - removed them
social_prefs_city$Location<-apply(social_prefs_city[,c("City","Country")],1,paste,collapse=", ")
class(social_prefs_city$Location)
x<-social_prefs_city[1:10,]
geocode(x,Location,output = "more")
missing_loc<-missing%>%
dplyr::select(X:Location)%>%
mutate_geocode(missing, Location, output="more")
mutate_geocode(x,Location,output = "more")
missing<-gps_coord%>%
filter(is.na(lat))%>%
mutate(Location=dplyr::recode_factor(Location,"Chugoku, Japan"="Shimonoseki, Japan",
"Costa Centro (Central Coast), Peru" ="Costa Centro, Peru",
"Costa Norte (North Coast), Peru" = "Costa Norte, Peru",
"Lima Metropolitana (Lima Metropolis), Peru" = "Lima Metropolitana, Peru",
"Sierra Norte (North Sierra/ North Mountain), Peru"="Sierra Norte, Peru",
"Mellersta Norrland, Sweden" = "Sundsvall, Sweden",
"Norra Mellansverige, Sweden" = "Gavle, Sweden",
"Ostra Mellansverige, Sweden" = "Uppsala, Sweden",
"Vastverige, Sweden"="Gothenburg, Sweden",
"Espace Mittelland, Switzerland" = "Bern, Switzerland",
"East Midlands, United Kingdom" = "Nottingham, United Kingdom",
"East of England, United Kingdom" = "Norwich, United Kingdom",
"North East, United Kingdom" = "Newcastle, United Kingdom",
"North West, United Kingdom "= "Manchester, United Kingdom",
"Zone II: North-Western, Venezuela"="North-Western, Venezuela",
"Zone III: Eastern, Venezuela" = "Eastern, Venezuela",
"Zone IV: Centre Llano, Venezuela " = "Centre Llano, Venezuela ",
"Zone VI: Andean, Venezuela" = "Andean, Venezuela"
))%>%
mutate(Location=as.character(Location))
missing_loc<-missing%>%
dplyr::select(X:Location)%>%
mutate_geocode(missing, Location, output="more")
missing_loc<-missing%>%
dplyr::select(X:Location)
missing_loc
class(missing_loc$Location)
missing_loc<-missing%>%
dplyr::select(X:Location)%>%
mutate_geocode(missing_loc, Location, output="more")
missing_loc<-missing%>%
dplyr::select(X:Location)
missing_loc<-mutate_geocode(missing_loc, Location, output="more")
View(missing_loc)
missing_loc
missing_loc$Location
geocode("Eastern, Venezuela")
geocode("Eastern zone, Venezuela")
geocode("Anzoategui, Monagas, Sucre, Venezuela")
missing<-gps_coord%>%
filter(is.na(lat))%>%
mutate(Location=dplyr::recode_factor(Location,"Chugoku, Japan"="Shimonoseki, Japan",
"Costa Centro (Central Coast), Peru" ="Costa Centro, Peru",
"Costa Norte (North Coast), Peru" = "Costa Norte, Peru",
"Lima Metropolitana (Lima Metropolis), Peru" = "Lima Metropolitana, Peru",
"Sierra Norte (North Sierra/ North Mountain), Peru"="Sierra Norte, Peru",
"Mellersta Norrland, Sweden" = "Sundsvall, Sweden",
"Norra Mellansverige, Sweden" = "Gavle, Sweden",
"Ostra Mellansverige, Sweden" = "Uppsala, Sweden",
"Vastverige, Sweden"="Gothenburg, Sweden",
"Espace Mittelland, Switzerland" = "Bern, Switzerland",
"East Midlands, United Kingdom" = "Nottingham, United Kingdom",
"East of England, United Kingdom" = "Norwich, United Kingdom",
"North East, United Kingdom" = "Newcastle, United Kingdom",
"North West, United Kingdom"= "Manchester, United Kingdom",
"Zone II: North-Western, Venezuela"="North-Western, Venezuela",
"Zone III: Eastern, Venezuela" = "Anzoategui, Monagas, Sucre, Venezuela",
"Zone IV: Centre Llano, Venezuela" = "Centre Llano, Venezuela ",
"Zone VI: Andean, Venezuela" = "Andean, Venezuela"
))%>%
mutate(Location=as.character(Location))
missing_loc<-missing%>%
dplyr::select(X:Location)
missing_loc<-mutate_geocode(missing_loc, Location, output="more")
View(missing_loc)
setwd("C:/Users/fores/OneDrive - The University of Nottingham/GitHub/COVID-19/Briq")
write.csv(missing_loc,"missing.csv")
gps_coord<-gps_coord%>%
filter(!is.na(lat))
gps_coord<-rbind(gps_coord,missing_loc)
gps_coord<-gps_coord%>%
group_by(Country)
View(gps_coord)
write.csv(gps_coord,"Briq/SocialPrefsGeo.csv")
setwd("C:/Users/fores/OneDrive - The University of Nottingham/GitHub/COVID-19")
write.csv(gps_coord,"Briq/SocialPrefsGeo.csv")
write.csv(gps_coord,"Briq/SocialPrefsGeo.csv")
source("Weather_new/ImportWeather.r")
source("Google/import_mobility.R")
source("Briq/import_social-prefs.r")
source("Cities/ImportCities.r")
source("ImportLong.r")
interGoogle_GPS<-short_mob%>%
filter(Country %in% gps_coord$Country)%>%
group_by(Country)%>%
mutate(number=n())
n_groups(interGoogle_GPS) #Good, back to 53, though, we prob. don't have city-level info for Croatia's GPS.
interGPS_Google<-gps_coord%>%
filter(Country %in% mobility_regional$Country)%>%
group_by(Country)%>%
mutate(number=n())
n_groups(interGPS_Google)
GpsGoo<-
fuzzy_inner_join(interGPS_Google, interGoogle_GPS,
by=c("lat"="SouthHalf", "lat"="NorthHalf","lon"="WestHalf","lon"="EastHalf"),
match_fun=list(`>=`, `<=`,`>=`,`<=`))
#Gets rid of double entries
GpsGoog<-GpsGoo%>%
group_by(lat,lon)%>%
summarise_all(first)%>%
ungroup()%>%
group_by(Country.x)
n_groups(GpsGoog)
missing<-interGPS_Google%>%
filter(is.na(lat))
