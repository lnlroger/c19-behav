weather<-read.csv("covid_dataset.csv")%>%
rename(Country=Country.Region)%>%
mutate(Country=recode_factor(Country,
'United States of America' = 'US','United Kingdom'='UK',
'United Arab Emirates'='UAE','Czech Republic'='Czechia',
'Bosnia and Herzegovina'='Bosnia','United States'='US',
'Viet Nam'='Vietnam','Congo (Kinshasa)'='Congo'))%>%
group_by(Country)%>%
summarise(Temperature=mean(temperature,na.rm=TRUE),Humidity=mean(humidity,na.rm=T),Age=first(medianage),
Health_exp_pc=first(health_exp_pc),Hospibed=first(hospibed),Density=first(density),Population=first(pop))%>%
naniar::replace_with_na_at(.vars = c("Age","Health_exp_pc","Hospibed"),
condition = ~.x == -999)
#write.csv(Time,"Time.csv")
wvs<-read.csv(here::here("WVS_per_Country.csv"))%>%
#filter(Wave==6)%>%
dplyr::select(Country,E235,E236,E124,E229,Wave)%>%
mutate(Country=recode_factor(Country,
'United States of America' = 'US','United Kingdom'='UK',
'United Arab Emirates'='UAE','Czech Republic'='Czechia',
'Bosnia and Herzegovina'='Bosnia','United States'='US',
'Viet Nam'='Vietnam','Congo (Kinshasa)'='Congo'))%>%
rename(Democracy=E235,Democraticness=E236,Civil=E124,Opression=E229)%>%
group_by(Country)%>%
filter(Wave==max(Wave)) #I keep the values for each country with the most recent available wave
rol<-read.csv(here::here("RuleOfLaw2018.csv"))%>%
mutate(Country=Country.Name,ROL=as.numeric(levels(X2018..YR2018.))[X2018..YR2018.])%>%
mutate(Country=recode_factor(Country,
'United States of America' = 'US','United Kingdom'='UK',
'United Arab Emirates'='UAE','Czech Republic'='Czechia',
'Bosnia and Herzegovina'='Bosnia','United States'='US',
'Viet Nam'='Vietnam','Congo (Kinshasa)'='Congo'))%>%
dplyr::select(Country,Country.Code,ROL)%>%
mutate(Country.Code=recode_factor(Country.Code,
'ROM'="ROU"))
#flu<-read.csv("influenza-vaccination-rates.csv")%>%
#group_by(Country.Code)%>%
#summarise(Time=last(time),VaccinationRate=last(value))%>%
#mutate(OECE=1)
#RolFlu<-merge(rol,flu,by="Country.Code",all=T)
#countries<-read.csv(here::here("Countries.csv"))%>%
#mutate(Country=trimws(Country))%>%
# mutate(Population:Service=as.numberic(Population:Service))
gdp<-read.csv("GDP.csv")%>%
mutate(Country=recode_factor(Country,
'United States of America' = 'US','United Kingdom'='UK',
'United Arab Emirates'='UAE','Czech Republic'='Czechia',
'Bosnia and Herzegovina'='Bosnia','United States'='US',
'Viet Nam'='Vietnam','Congo (Kinshasa)'='Congo'))%>%
group_by(Country)%>%
dplyr::select(Country.Code,X2018)%>%
mutate(log_GDP_pc=log(X2018))
elections<-read.csv("DPI2017_basefile_Jan2018.csv")%>%
mutate(Country=ï..countryname)%>%
mutate(Country=recode_factor(Country,
'United States of America' = 'US','United Kingdom'='UK',
'United Arab Emirates'='UAE','Czech Republic'='Czechia',
'Bosnia and Herzegovina'='Bosnia','United States'='US',"USA"="US",
'Viet Nam'='Vietnam','Congo (Kinshasa)'='Congo'))%>%
#mutate(ifs="Country.Code")%>%
arrange(Country,year)%>%
group_by(Country)%>%
summarise(ElectionYear=last(year),ElectionWin=last(percent1),Country.Code=first(ifs))%>%
naniar::replace_with_na_at(.vars = c("ElectionYear","ElectionWin","Country.Code"),
condition = ~.x == -999)%>%
drop_na()
#RolFluElec<-merge(RolFlu,elections,by="Country.Code",all=T)%>%
# mutate(Country=Country.x)
# dplyr::select(Country,percent1)
social_prefs<-read.csv("socialprefs.csv")%>%
rename(Country=country)%>%
mutate(Country=recode_factor(Country,
'United States of America' = 'US','United Kingdom'='UK',
'United Arab Emirates'='UAE','Czech Republic'='Czechia',
'Bosnia and Herzegovina'='Bosnia','United States'='US',"USA"="US",
'Viet Nam'='Vietnam','Congo (Kinshasa)'='Congo'))%>%
df<-merge(merge(merge(merge(merge(merge(merge(
mobility,
DaysLock,by="Country",all=T),
wvs,by="Country",all=T),
weather,by="Country",all=T),
gdp,by="Country",all=T),
elections,by="Country",all=T),
rol,by="Country",all=T),
social_prefs,by="Country",all=T)
df$Mobility<-rowMeans(df[,c("Retail...recreation","Grocery...pharmacy","Parks","Transit.stations",
"Workplaces","Residential")])
library(tidyr)
library(dplyr)
library(stringr)
library(lmerTest)
library(stargazer)
library(ggplot2)
library(mfx)
library(knitr)
library(kSamples)
library(FSA)
library(kableExtra)
library(xtable)
library(miceadds)
library(jtools)
library(plm)
library(clubSandwich)
library(ggrepel)
library(sjPlot)
library(sjmisc)
library(sjlabelled)
library(naniar)
#use abbreviated terms for countries
mobility <- read.csv(here::here("google_mobility_report_regions.csv"))%>%
filter(Region=="Total")%>%
mutate(Country=recode_factor(Country,
'United States of America' = 'US','United Kingdom'='UK',
'United Arab Emirates'='UAE','Czech Republic'='Czechia',
'Bosnia and Herzegovina'='Bosnia','United Kingdom'='UK',
'Viet Nam'='Vietnam'
))
#lockdown has been customised so as to take the median Province's attitude
lockdown<- read.csv(here::here("countryLockdowndates_custom.csv"))%>%
rename(Country=Country.Region)%>%
rename(DateRestriction=Date)%>%
mutate(Lock=ifelse(Type=="None","No","Yes"))%>%
mutate(Country=recode_factor(Country,
'United States of America' = 'US','United Kingdom'='UK',
'United Arab Emirates'='UAE','Czech Republic'='Czechia',
'Bosnia and Herzegovina'='Bosnia','United Kingdom'='UK',
'Viet Nam'='Vietnam','Congo (Kinshasa)'='Congo'))
#2020-01-22 is the date from which the covid dataset starts counting
days_death<-read.csv("CovidDeaths.csv")%>%
rename(Country=location)%>%
mutate(Country=recode_factor(Country,
'United States of America' = 'US','United Kingdom'='UK',
'United Arab Emirates'='UAE','Czech Republic'='Czechia',
'Bosnia and Herzegovina'='Bosnia','United States'='US',
'Viet Nam'='Vietnam','Congo (Kinshasa)'='Congo'))
days_1case<-days_death[days_death$new_cases==1,]%>%
group_by(Country)%>%
summarise(Date_1Confirmed=first(date))
days_1death<-days_death[days_death$new_deaths==1,]%>%
group_by(Country)%>%
summarise(Date_1Death=first(date))
time<-merge(merge(
days_death,
days_1case,by="Country",all=T),
days_1death,by="Country",all=T)
time_short<-time%>%
group_by(Country)%>%
summarise(Date_1confirmed=first(Date_1Confirmed),Date_1death=first(Date_1Death),
TotalCases=last(total_cases),TotalDeaths=last(total_deaths))
DaysLock<-merge(lockdown,time_short,by="Country",all=T)%>%
mutate(DateRestriction=as.Date(DateRestriction,format="%d/%m/%Y"))%>%
mutate(DaysDuration=ifelse(Type=="None",0,as.Date("29/03/2020",format="%d/%m/%y")-as.Date(DateRestriction)))%>%
mutate(DaysRestrictionStart=DateRestriction-as.Date("22/01/2020",format="%d/%m/%Y"))%>%
mutate(Days_Movement_1case=as.Date("29/03/2020",format="%d/%m/%y")-as.Date(Date_1confirmed,format="%d/%m/%y"))%>%
mutate(Days_Movement_1death=as.Date("29/03/2020",format="%d/%m/%y")-as.Date(Date_1death,format="%d/%m/%y"))
weather<-read.csv("covid_dataset.csv")%>%
rename(Country=Country.Region)%>%
mutate(Country=recode_factor(Country,
'United States of America' = 'US','United Kingdom'='UK',
'United Arab Emirates'='UAE','Czech Republic'='Czechia',
'Bosnia and Herzegovina'='Bosnia','United States'='US',
'Viet Nam'='Vietnam','Congo (Kinshasa)'='Congo'))%>%
group_by(Country)%>%
summarise(Temperature=mean(temperature,na.rm=TRUE),Humidity=mean(humidity,na.rm=T),Age=first(medianage),
Health_exp_pc=first(health_exp_pc),Hospibed=first(hospibed),Density=first(density),Population=first(pop))%>%
naniar::replace_with_na_at(.vars = c("Age","Health_exp_pc","Hospibed"),
condition = ~.x == -999)
#write.csv(Time,"Time.csv")
wvs<-read.csv(here::here("WVS_per_Country.csv"))%>%
#filter(Wave==6)%>%
dplyr::select(Country,E235,E236,E124,E229,Wave)%>%
mutate(Country=recode_factor(Country,
'United States of America' = 'US','United Kingdom'='UK',
'United Arab Emirates'='UAE','Czech Republic'='Czechia',
'Bosnia and Herzegovina'='Bosnia','United States'='US',
'Viet Nam'='Vietnam','Congo (Kinshasa)'='Congo'))%>%
rename(Democracy=E235,Democraticness=E236,Civil=E124,Opression=E229)%>%
group_by(Country)%>%
filter(Wave==max(Wave)) #I keep the values for each country with the most recent available wave
rol<-read.csv(here::here("RuleOfLaw2018.csv"))%>%
mutate(Country=Country.Name,ROL=as.numeric(levels(X2018..YR2018.))[X2018..YR2018.])%>%
mutate(Country=recode_factor(Country,
'United States of America' = 'US','United Kingdom'='UK',
'United Arab Emirates'='UAE','Czech Republic'='Czechia',
'Bosnia and Herzegovina'='Bosnia','United States'='US',
'Viet Nam'='Vietnam','Congo (Kinshasa)'='Congo'))%>%
dplyr::select(Country,Country.Code,ROL)%>%
mutate(Country.Code=recode_factor(Country.Code,
'ROM'="ROU"))
#flu<-read.csv("influenza-vaccination-rates.csv")%>%
#group_by(Country.Code)%>%
#summarise(Time=last(time),VaccinationRate=last(value))%>%
#mutate(OECE=1)
#RolFlu<-merge(rol,flu,by="Country.Code",all=T)
#countries<-read.csv(here::here("Countries.csv"))%>%
#mutate(Country=trimws(Country))%>%
# mutate(Population:Service=as.numberic(Population:Service))
gdp<-read.csv("GDP.csv")%>%
mutate(Country=recode_factor(Country,
'United States of America' = 'US','United Kingdom'='UK',
'United Arab Emirates'='UAE','Czech Republic'='Czechia',
'Bosnia and Herzegovina'='Bosnia','United States'='US',
'Viet Nam'='Vietnam','Congo (Kinshasa)'='Congo'))%>%
group_by(Country)%>%
dplyr::select(Country.Code,X2018)%>%
mutate(log_GDP_pc=log(X2018))
elections<-read.csv("DPI2017_basefile_Jan2018.csv")%>%
mutate(Country=ï..countryname)%>%
mutate(Country=recode_factor(Country,
'United States of America' = 'US','United Kingdom'='UK',
'United Arab Emirates'='UAE','Czech Republic'='Czechia',
'Bosnia and Herzegovina'='Bosnia','United States'='US',"USA"="US",
'Viet Nam'='Vietnam','Congo (Kinshasa)'='Congo'))%>%
#mutate(ifs="Country.Code")%>%
arrange(Country,year)%>%
group_by(Country)%>%
summarise(ElectionYear=last(year),ElectionWin=last(percent1),Country.Code=first(ifs))%>%
naniar::replace_with_na_at(.vars = c("ElectionYear","ElectionWin","Country.Code"),
condition = ~.x == -999)%>%
drop_na()
#RolFluElec<-merge(RolFlu,elections,by="Country.Code",all=T)%>%
# mutate(Country=Country.x)
# dplyr::select(Country,percent1)
social_prefs<-read.csv("socialprefs.csv")%>%
rename(Country=country)%>%
mutate(Country=recode_factor(Country,
'United States of America' = 'US','United Kingdom'='UK',
'United Arab Emirates'='UAE','Czech Republic'='Czechia',
'Bosnia and Herzegovina'='Bosnia','United States'='US',"USA"="US",
'Viet Nam'='Vietnam','Congo (Kinshasa)'='Congo'))%>%
df<-merge(merge(merge(merge(merge(merge(merge(
mobility,
DaysLock,by="Country",all=T),
wvs,by="Country",all=T),
weather,by="Country",all=T),
gdp,by="Country",all=T),
elections,by="Country",all=T),
rol,by="Country",all=T),
social_prefs,by="Country",all=T)
df$Mobility<-rowMeans(df[,c("Retail...recreation","Grocery...pharmacy","Parks","Transit.stations",
"Workplaces","Residential")])
df<-read.csv("14042020.csv")
df<-read.csv(here::here("14042020.csv"))
library(tidyr)
library(dplyr)
library(stringr)
library(lmerTest)
library(stargazer)
library(ggplot2)
library(mfx)
library(knitr)
library(kSamples)
library(FSA)
library(kableExtra)
library(xtable)
library(miceadds)
library(jtools)
library(plm)
library(clubSandwich)
library(ggrepel)
library(sjPlot)
library(sjmisc)
library(sjlabelled)
library(naniar)
options("jtools-digits" = 4,scipen=999) # set displayed decimal places to 4
df<-read.csv(here::here("14042020.csv"))
library(tidyr)
library(dplyr)
library(stringr)
library(lmerTest)
library(stargazer)
library(ggplot2)
library(mfx)
library(knitr)
library(kSamples)
library(FSA)
library(kableExtra)
library(xtable)
library(miceadds)
library(jtools)
library(plm)
library(clubSandwich)
library(ggrepel)
library(sjPlot)
library(sjmisc)
library(sjlabelled)
library(naniar)
options("jtools-digits" = 4,scipen=999) # set displayed decimal places to 4
df<-read.csv(here::here("14042020.csv"))
library(tidyr)
library(dplyr)
library(stringr)
library(lmerTest)
library(stargazer)
library(ggplot2)
library(mfx)
library(knitr)
library(kSamples)
library(FSA)
library(kableExtra)
library(xtable)
library(miceadds)
library(jtools)
library(plm)
library(clubSandwich)
library(ggrepel)
library(sjPlot)
library(sjmisc)
library(sjlabelled)
library(naniar)
library(ggpubr)
library(countrycode)
library(lubridate)
library(here)
library(Hmisc)
library(ggpubr)
library(ggpubr)
devtools::install_github("kassambara/ggpubr")
install.packages("rlang")
devtools::install_github("kassambara/ggpubr")
?lme4
devtools::install_github("kassambara/ggpubr")
?glue
??glue
install.packages("mosaic")
rm(list = ls())
knitr::opts_chunk$set(echo = TRUE)
library("tidyverse")
library("sjPlot")
source("ARDL_fun.R")
# Prepare dataset (take differences, drop unnecessary variables and missing observations)
df.now <- read_rds("../df_covid_long.rds") %>%
filter(sub_region_1 == "") %>%
group_by(Country) %>%
mutate(diff.Movement = c(NA, diff(Movement)),
diff.StringencyIndex = c(NA, diff(StringencyIndex))) %>%
dplyr::select(Country, Date, diff.Movement, diff.StringencyIndex, Movement, StringencyIndex) %>%
drop_na()
setwd("C:/Users/fores/OneDrive - The University of Nottingham/GitHub")
# Prepare dataset (take differences, drop unnecessary variables and missing observations)
df.now <- read_rds("../df_covid_long.rds") %>%
filter(sub_region_1 == "") %>%
group_by(Country) %>%
mutate(diff.Movement = c(NA, diff(Movement)),
diff.StringencyIndex = c(NA, diff(StringencyIndex))) %>%
dplyr::select(Country, Date, diff.Movement, diff.StringencyIndex, Movement, StringencyIndex) %>%
drop_na()
df<-readRDS("df_covid_long.rds")
getwd()
setwd("C:/Users/fores/OneDrive - The University of Nottingham/GitHub/COVID-19")
getwd()
df<-readRDS("df_covid_long.rds")
# Prepare dataset (take differences, drop unnecessary variables and missing observations)
df.now <- read_rds("../df_covid_long.rds") %>%
filter(sub_region_1 == "") %>%
group_by(Country) %>%
mutate(diff.Movement = c(NA, diff(Movement)),
diff.StringencyIndex = c(NA, diff(StringencyIndex))) %>%
dplyr::select(Country, Date, diff.Movement, diff.StringencyIndex, Movement, StringencyIndex) %>%
drop_na()
setwd("C:/Users/fores/OneDrive - The University of Nottingham/GitHub/COVID-19/code")
# Prepare dataset (take differences, drop unnecessary variables and missing observations)
df.now <- read_rds("../df_covid_long.rds") %>%
filter(sub_region_1 == "") %>%
group_by(Country) %>%
mutate(diff.Movement = c(NA, diff(Movement)),
diff.StringencyIndex = c(NA, diff(StringencyIndex))) %>%
dplyr::select(Country, Date, diff.Movement, diff.StringencyIndex, Movement, StringencyIndex) %>%
drop_na()
View(df)
# Prepare dataset (take differences, drop unnecessary variables and missing observations)
df.now <- read_rds("../df_covid_long.rds") %>%
filter(City == "") %>%
group_by(Country) %>%
mutate(diff.Movement = c(NA, diff(Movement)),
diff.StringencyIndex = c(NA, diff(StringencyIndex))) %>%
dplyr::select(Country, Date, diff.Movement, diff.StringencyIndex, Movement, StringencyIndex) %>%
drop_na()
rm(df)
View(df.now)
list5<-ARDL.flex(data.input = df.now,depvar="diff.Movement",indepvar ="diff.StringencyIndex" ,max.p=3,max.q=3,by.var="Country")
longR<-list5$longrun
longR<-list5$summary$LongRunCoefficient
longR<-list5$summary
longR<-cbind(list5$summary$ObsUnit,list5$summary$LongRunCoefficient)
longR<-list5$summary[,1]
longR<-list5$summary[,c("ObsUnit","LongRunCoefficient")]
View(longR)
View(longR)
belarus<-df.now%>%
group_by(Country)%>%
summarise(SI=mean(StringencyIndex))
View(belarus)
load("ARDL-output.RData")
View(output.ardl)
longR2<-output.ardl$summary[,c("ObsUnit","LongRunCoefficient")]
View(longR2)
means<-df.now%>%
group_by("Country")%>%
summarise(Move=mean(Movement),SI=mean(StringencyIndex))
means<-df.now%>%
group_by("Country")%>%
summarise(Move=mean(Movement),SI=mean(StringencyIndex))
n_groups(df.now)
View(means)
means<-df.now%>%
group_by(Country)%>%
summarise(Move=mean(Movement),SI=mean(StringencyIndex))
View(means)
means$LR<-longR2$LongRunCoefficient
source("Weather_new/combining_Cities.r")
getwd()
setwd("C:/Users/fores/OneDrive - The University of Nottingham/GitHub/COVID-19")
source("Weather_new/combining_Cities.r")
getwd()
source("Weather_new/combining_Cities.r")
source("Weather_new/combining_Cities.r")
# Prepare dataset (take differences, drop unnecessary variables and missing observations)
df.now <- read_rds("../df_covid_long.rds") %>%
filter(City == "") %>%
group_by(Country) %>%
mutate(diff.Movement = c(NA, diff(Movement)),
diff.StringencyIndex = c(NA, diff(StringencyIndex))) %>%
dplyr::select(Country, Date, diff.Movement, diff.StringencyIndex, Movement, StringencyIndex) %>%
drop_na()
list5<-ARDL.flex(data.input = df.now,depvar="diff.Movement",indepvar ="diff.StringencyIndex" ,max.p=3,max.q=3,by.var="Country")
source("ARDL_fun.R")
list5<-ARDL.flex(data.input = df.now,depvar="diff.Movement",indepvar ="diff.StringencyIndex" ,max.p=3,max.q=3,by.var="Country")
View(gwmp)
longR<-list5$summary[,c("ObsUnit","LongRunCoefficient")]
load("ARDL-output.RData")
longR2<-output.ardl$summary[,c("ObsUnit","LongRunCoefficient")]
means<-df.now%>%
group_by(Country)%>%
summarise(Move=mean(Movement),SI=mean(StringencyIndex))
means$LR<-longR2$LongRunCoefficient
Countries<-gwmp%>%
group_by("Country")%>%
summarise(Country=first(Country))
Countries<-gwmp%>%
group_by(Country)%>%
summarise(Country=first(Country))
Countries<-gwmp%>%
filter(!is.na(City))%>%
group_by(Country)%>%
summarise(Country=first(Country))
View(Countries)
Countries<-gwmp%>%
filter(!is.na(City))%>%
group_by(Country)%>%
summarise(Country=first(Country),city=first(City))
View(Countries)
Countries<-gwmp%>%
filter(!is.na(City),!is.na(Mobility),!is.na(TEMP))%>%
group_by(Country)%>%
summarise(Country=first(Country),city=first(City))
Countries<-gwmp%>%
filter(!is.na(City),!is.na(Movement),!is.na(TEMP))%>%
group_by(Country)%>%
summarise(Country=first(Country),city=first(City))
short<-df.now%>%
filter(Country %in% Countries$Country)%>%
short<-df.now%>%
filter(Country %in% Countries$Country)
short<-df.now%>%
filter(Country %in% Countries$Country)
shortR<-output.ardl$summary[,c("ObsUnit","LongRunCoefficient")]
shortR<-longR2%>%
filter(ObsUnit%in%short$Country   )
short$LongR<-shortR$LongRunCoefficient
shortR<-longR2%>%
filter(ObsUnit%in%short$Country)%>%
rename(Country=ObsUnit)
short<-left_join(short,shortR,by="Country")
list5<-ARDL.flex(data.input = df.now,depvar="diff.Movement",indepvar ="diff.StringencyIndex" ,max.p=3,max.q=3,by.var="Country")
longR<-list5$summary[,c("ObsUnit","LongRunCoefficient")]
load("ARDL-output.RData")
longR2<-output.ardl$summary[,c("ObsUnit","LongRunCoefficient")]
means<-df.now%>%
group_by(Country)%>%
summarise(Move=mean(Movement),SI=mean(StringencyIndex))
means$LR<-longR2$LongRunCoefficient
#source("Weather_new/combining_Cities.r")
Countries<-gwmp%>%
filter(!is.na(City),!is.na(Movement),!is.na(TEMP))%>%
group_by(Country)%>%
summarise(Country=first(Country),city=first(City))
short<-df.now%>%
filter(Country %in% Countries$Country)
shortR<-longR2%>%
filter(ObsUnit%in%short$Country)%>%
rename(Country=ObsUnit)
short<-left_join(short,shortR,by="Country")
meansSh<- group_by(Country)%>%
summarise(Move=mean(Movement),SI=mean(StringencyIndex),LR=mean(LongRunCoefficient))
meansSh<- group_by(Country)%>%
summarise(Move=mean(Movement),SI=mean(StringencyIndex),LR=mean(LongRunCoefficient))
short<-left_join(short,shortR,by="Country")
meansSh<- group_by(Country)%>%
summarise(Move=mean(Movement),SI=mean(StringencyIndex),LR=mean(LongRunCoefficient))
meansSh<- short%>%
group_by(Country)%>%
summarise(Move=mean(Movement),SI=mean(StringencyIndex),LR=mean(LongRunCoefficient))
short<-df.now%>%
filter(Country %in% Countries$Country)
shortR<-longR2%>%
filter(ObsUnit%in%short$Country)%>%
rename(Country=ObsUnit)
short<-left_join(short,shortR,by="Country")
meansSh<- short%>%
group_by(Country)%>%
summarise(Move=mean(Movement),SI=mean(StringencyIndex),LR=mean(LongRunCoefficient))
View(meansSh)
