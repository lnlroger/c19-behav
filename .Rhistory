summarise(total_deaths=last(total_deaths))
w1_other<-w1%>%
filter(!is.na(Movement),!is.na(StringencyIndex))%>%
group_by(Country)%>%
summarise(total_deaths=last(total_deaths),
total_cases=last(total_cases),
LogDeath=log(last(total_deaths)+1),
LogCases=log(last(total_cases)+1),
MaxSI=max(StringencyIndex))
w1_other<-w1%>%
filter(!is.na(Movement),!is.na(StringencyIndex))%>%
group_by(Country)%>%
summarise(total_deaths=mean(total_deaths))
w1$total_deaths
w1_other<-w1%>%
filter(!is.na(Movement),!is.na(StringencyIndex))%>%
group_by(Country)%>%
dplyr::summarise(total_deaths=last(total_deaths),
total_cases=last(total_cases),
LogDeath=log(last(total_deaths)+1),
LogCases=log(last(total_cases)+1),
MaxSI=max(StringencyIndex))
w1_short<-merge(w1_avg,w1_other,by="Country",all=T)
w1_short<-merge(w1_short,wq,by="Country",all=T)
vars_basic<-c("log_GDP_pc","Unemployment","Pop_Density_sq_mi","Age_65up","Death_disease")
vars_briq<-c("risktaking","patience","negrecip","trust","posrecip","altruism")
vars_hof<-c("COL","PDI","MAS","UAI")
tab_model(lm(data=w1_short,LogDeath~Compliance))
briq<-formula(paste("LogDeath ~", paste(c(vars_basic,vars_briq,"ROL","Compliance"), sep = "", collapse = "+")))
briq_mob<-lm(data=w1_short,briq)
tab_model(briq_mob)
tab_model(lm(data=df_short,LogDeath~Movement))
tab_model(lm(data=df_short,LogCases~Movement))
briq<-formula(paste("LogDeath ~", paste(c(vars_basic,vars_briq,"ROL","Movement"), sep = "", collapse = "+")))
briq_mob<-lm(data=df_short,briq)
tab_model(briq_mob)
df_short%>%
filter(!is.na(Movement),!is.na(StringencyIndex))%>%
#mutate(Country=as.factor(Country))%>%
#group_by(Country)%>%
mutate(Country = forcats::fct_reorder(Country,LongRunCoeff_3)) %>%
ggplot()+
geom_point(aes(x=Country,y=LongRunCoeff_3),colour="blue")+
coord_flip()+
#geom_vline(xintercept=0,colour="black")+
# scale_y_discrete()+
#scale_x_discrete()+
labs(x = 'Countries',y = "Long Run Coef_3")+
theme_bw()
basic<-formula(paste("LogDeath ~", paste(vars_basic, sep = "", collapse = "+")))
basic_mob<-lm(data=df_short,basic)
briq<-formula(paste("LogDeath ~", paste(c(vars_basic,vars_briq,"ROL"), sep = "", collapse = "+")))
briq_mob<-lm(data=df_short,briq)
hof<-formula(paste("LogDeath ~", paste(c(vars_basic,vars_briq,"ROL",vars_hof), sep = "", collapse = "+")))
hof_mob<-lm(data=df_short,hof)
tab_model(basic_mob,briq_mob,hof_mob)
View(df_short)
source("ImportLong.r")
q<-df%>%
filter(!is.na(Movement),!is.na(StringencyIndex))%>%
group_by(Country)%>%
summarise(SimpleCoef=summary(lm(Movement~StringencyIndex))$coefficients[2,1],
SimpleSE=summary(lm(Movement~StringencyIndex))$coefficients[2,2],
Cor=cor.test(StringencyIndex,Movement)$estimate[[1]])%>%
ungroup()
df<-merge(df,q,by='Country')
library(plyr)
library(tidyverse)
library(stringr)
library(lmerTest)
library(stargazer)
library(mfx)
library(knitr)
library(kSamples)
library(FSA)
library(kableExtra)
library(xtable)
library(miceadds)
library(jtools)
library(plm)
library(clubSandwich)
library(ggrepel)
library(sjPlot)
library(sjmisc)
library(sjlabelled)
library(naniar)
library(ggpubr)
library(lubridate)
options("jtools-digits" = 4,scipen=999) # set displayed decimal places to 4
rm(list = ls())
source("ImportLong.r")
q<-df%>%
filter(!is.na(Movement),!is.na(StringencyIndex))%>%
group_by(Country)%>%
summarise(SimpleCoef=summary(lm(Movement~StringencyIndex))$coefficients[2,1],
SimpleSE=summary(lm(Movement~StringencyIndex))$coefficients[2,2],
Cor=cor.test(StringencyIndex,Movement)$estimate[[1]])%>%
ungroup()
df<-merge(df,q,by='Country')
df_avg<-df%>%
filter(!is.na(Movement),!is.na(StringencyIndex))%>%
group_by(Country)%>%
summarise_at(vars(-c(total_deaths,total_cases)),mean,na.rn=TRUE)%>%
ungroup()
df_other<-df%>%
group_by(Country)%>%
summarise(total_deaths=last(total_deaths),total_cases=last(total_cases),LogDeath=(log(last(total_deaths)+1)),LogCases=log(last(total_cases)+1),MaxSI=max(StringencyIndex,na.rm=TRUE))%>%
ungroup()
df_short<-merge(df_avg,df_other,by="Country",all=T)
#Focusing on the first wave only
w1<-df%>%
filter(!is.na(StringencyIndex),!is.na(Movement))%>%
group_by(Country)%>%
mutate(day=row_number())%>%  ###Putting a counter for each row of each group
add_tally()%>% ## creating a variable "n" that counts how many rows each group has.
arrange(Date)%>%
mutate(wave1=if_else(StringencyIndex>=dplyr::lag(StringencyIndex),1,0))%>%
mutate(fir=match(0,wave1)-1)%>% ### first occurence of a 0-value - 1 to discard the 0.
mutate(fir=tidyr::replace_na(fir,n()))%>% ### countries that never had a 0 appear as NA. We replace NAs with total rows of 1's
mutate(wave=ifelse(day<=fir,"first","second"))%>%
filter(wave=="first")%>%
ungroup()%>%
arrange(Country,Date)
#Break up w1 by country, then fit specified model to each piec and return a list
models<-dlply(w1,'Country',function(df)
lm(Movement~StringencyIndex,data=df))
#apply coef to each model and return a data frame
wq<-ldply(models,coef)
names(wq)<-c("Country","Intercept","Compliance")
w1_avg<-w1%>%
filter(!is.na(Movement),!is.na(StringencyIndex))%>%
group_by(Country)%>%
summarise_at(vars(-c(total_deaths,total_cases)),mean,na.rn=TRUE)%>%
ungroup()
w1_other<-w1%>%
filter(!is.na(Movement),!is.na(StringencyIndex))%>%
group_by(Country)%>%
dplyr::summarise(total_deaths=last(total_deaths),
total_cases=last(total_cases),
LogDeath=log(last(total_deaths)+1),
LogCases=log(last(total_cases)+1),
MaxSI=max(StringencyIndex))
w1_short<-merge(w1_avg,w1_other,by="Country",all=T)
w1_short<-merge(w1_short,wq,by="Country",all=T)
vars_basic<-c("log_GDP_pc","Unemployment","Pop_Density_sq_mi","Age_65up","Death_disease")
vars_briq<-c("risktaking","patience","negrecip","trust","posrecip","altruism")
vars_hof<-c("COL","PDI","MAS","UAI")
df_short%>%
filter(!is.na(Movement),!is.na(StringencyIndex))%>%
#mutate(Country=as.factor(Country))%>%
#group_by(Country)%>%
mutate(Country = forcats::fct_reorder(Country,-Movement)) %>%
ggplot()+
geom_point(aes(x=Country,y=Movement),colour="blue")+
coord_flip()+
#geom_vline(xintercept=0,colour="black")+
# scale_y_discrete()+
#scale_x_discrete()+
labs(x = 'Countries',y = "Average Movement")+
theme_bw()
basic<-formula(paste("Movement ~", paste(vars_basic, sep = "", collapse = "+")))
basic_mob<-lm(data=df_short,basic)
briq<-formula(paste("Movement ~", paste(c(vars_basic,vars_briq,"ROL"), sep = "", collapse = "+")))
briq_mob<-lm(data=df_short,briq)
hof<-formula(paste("Movement ~", paste(c(vars_basic,vars_briq,"ROL",vars_hof), sep = "", collapse = "+")))
hof_mob<-lm(data=df_short,hof)
tab_model(basic_mob,briq_mob,hof_mob)
basic_mob<-lm(data=w1_short,basic)
briq_mob<-lm(data=w1_short,briq)
hof_mob<-lm(data=w1_short,hof)
tab_model(basic_mob,briq_mob,hof_mob)
df_short%>%
filter(!is.na(Movement),!is.na(StringencyIndex))%>%
#mutate(Country=as.factor(Country))%>%
#group_by(Country)%>%
mutate(Country = forcats::fct_reorder(Country,StringencyIndex)) %>%
ggplot()+
geom_point(aes(x=Country,y=StringencyIndex),colour="blue")+
coord_flip()+
#geom_vline(xintercept=0,colour="black")+
# scale_y_discrete()+
#scale_x_discrete()+
labs(x = 'Countries',y = "Average Stringency Index")+
theme_bw()
basic<-formula(paste("StringencyIndex ~", paste(vars_basic, sep = "", collapse = "+")))
basic_mob<-lm(data=df_short,basic)
briq<-formula(paste("StringencyIndex ~", paste(c(vars_basic,vars_briq,"ROL"), sep = "", collapse = "+")))
briq_mob<-lm(data=df_short,briq)
hof<-formula(paste("StringencyIndex ~", paste(c(vars_basic,vars_briq,"ROL",vars_hof), sep = "", collapse = "+")))
hof_mob<-lm(data=df_short,hof)
tab_model(basic_mob,briq_mob,hof_mob)
df_short%>%
filter(!is.na(Movement),!is.na(StringencyIndex))%>%
#mutate(Country=as.factor(Country))%>%
#group_by(Country)%>%
mutate(Country = forcats::fct_reorder(Country,LongRunCoeff_3)) %>%
ggplot()+
geom_point(aes(x=Country,y=LongRunCoeff_3),colour="blue")+
coord_flip()+
#geom_vline(xintercept=0,colour="black")+
# scale_y_discrete()+
#scale_x_discrete()+
labs(x = 'Countries',y = "Long Run Coef_3")+
theme_bw()
basic<-formula(paste("LongRunCoeff_3 ~", paste(vars_basic, sep = "", collapse = "+")))
basic_mob<-lm(data=df_short,basic)
briq<-formula(paste("LongRunCoeff_3 ~", paste(c(vars_basic,vars_briq,"ROL"), sep = "", collapse = "+")))
briq_mob<-lm(data=df_short,briq)
hof<-formula(paste("LongRunCoeff_3 ~", paste(c(vars_basic,vars_briq,"ROL",vars_hof), sep = "", collapse = "+")))
hof_mob<-lm(data=df_short,hof)
tab_model(basic_mob,briq_mob,hof_mob)
df%>%
mutate(Date=as.Date(Date))%>%
mutate(label = if_else(Date == max(Date,na.rm=T) & total_deaths>10000, as.character(Country), NA_character_)) %>%
#filter(TotalDeaths>1000,Date>as.Date("01/03/2020",format="%d/%m/%y"))%>%
group_by(Country)%>%
ggplot(aes(x = Date, y = total_deaths,group=Country, color=Country)) +
geom_line(size=1) +
#scale_colour_brewer(palette = 'Set1')+
#guides(colour="legend")
scale_color_discrete(guide = FALSE)+
theme_minimal()+
theme(text = element_text(size=15))+
geom_label_repel(aes(label = label),
nudge_x = 1,
na.rm = TRUE)
df%>%
mutate(Date=as.Date(Date))%>%
mutate(label = if_else(Date == max(Date,na.rm=T) & total_deaths_per_million>200, as.character(Country), NA_character_)) %>%
#filter(TotalDeaths>1000,Date>as.Date("01/03/2020",format="%d/%m/%y"))%>%
group_by(Country)%>%
ggplot(aes(x = Date, y = total_deaths_per_million,group=Country, color=Country)) +
geom_line(size=1) +
#scale_colour_brewer(palette = 'Set1')+
#guides(colour="legend")
scale_color_discrete(guide = FALSE)+
theme_minimal()+
theme(text = element_text(size=15))+
geom_label_repel(aes(label = label),
nudge_x = 1,
na.rm = TRUE)
basic<-formula(paste("LogDeath ~", paste(vars_basic, sep = "", collapse = "+")))
basic_mob<-lm(data=df_short,basic)
briq<-formula(paste("LogDeath ~", paste(c(vars_basic,vars_briq,"ROL"), sep = "", collapse = "+")))
briq_mob<-lm(data=df_short,briq)
hof<-formula(paste("LogDeath ~", paste(c(vars_basic,vars_briq,"ROL",vars_hof), sep = "", collapse = "+")))
hof_mob<-lm(data=df_short,hof)
tab_model(basic_mob,briq_mob,hof_mob)
df<-merge(df,q,by='Country',all=TRUE)
source("ImportLong.r")
q<-df%>%
filter(!is.na(Movement),!is.na(StringencyIndex))%>%
group_by(Country)%>%
summarise(SimpleCoef=summary(lm(Movement~StringencyIndex))$coefficients[2,1],
SimpleSE=summary(lm(Movement~StringencyIndex))$coefficients[2,2],
Cor=cor.test(StringencyIndex,Movement)$estimate[[1]])%>%
ungroup()
df<-merge(df,q,by='Country',all=TRUE)
df_avg<-df%>%
filter(!is.na(Movement),!is.na(StringencyIndex))%>%
group_by(Country)%>%
summarise_at(vars(-c(total_deaths,total_cases)),mean,na.rn=TRUE)%>%
ungroup()
df_other<-df%>%
group_by(Country)%>%
summarise(total_deaths=last(total_deaths),total_cases=last(total_cases),LogDeath=(log(last(total_deaths)+1)),LogCases=log(last(total_cases)+1),MaxSI=max(StringencyIndex,na.rm=TRUE))%>%
ungroup()
df_short<-merge(df_avg,df_other,by="Country",all=T)
basic<-formula(paste("StringencyIndex ~", paste(vars_basic, sep = "", collapse = "+")))
basic_mob<-lm(data=df_short,basic)
briq<-formula(paste("StringencyIndex ~", paste(c(vars_basic,vars_briq,"ROL"), sep = "", collapse = "+")))
briq_mob<-lm(data=df_short,briq)
hof<-formula(paste("StringencyIndex ~", paste(c(vars_basic,vars_briq,"ROL",vars_hof), sep = "", collapse = "+")))
hof_mob<-lm(data=df_short,hof)
tab_model(basic_mob,briq_mob,hof_mob)
basic<-formula(paste("LongRunCoeff_3 ~", paste(vars_basic, sep = "", collapse = "+")))
basic_mob<-lm(data=df_short,basic)
briq<-formula(paste("LongRunCoeff_3 ~", paste(c(vars_basic,vars_briq,"ROL"), sep = "", collapse = "+")))
briq_mob<-lm(data=df_short,briq)
hof<-formula(paste("LongRunCoeff_3 ~", paste(c(vars_basic,vars_briq,"ROL",vars_hof), sep = "", collapse = "+")))
hof_mob<-lm(data=df_short,hof)
tab_model(basic_mob,briq_mob,hof_mob)
basic<-formula(paste("LogDeath ~", paste(vars_basic, sep = "", collapse = "+")))
basic_mob<-lm(data=df_short,basic)
briq<-formula(paste("LogDeath ~", paste(c(vars_basic,vars_briq,"ROL"), sep = "", collapse = "+")))
briq_mob<-lm(data=df_short,briq)
hof<-formula(paste("LogDeath ~", paste(c(vars_basic,vars_briq,"ROL",vars_hof), sep = "", collapse = "+")))
hof_mob<-lm(data=df_short,hof)
tab_model(basic_mob,briq_mob,hof_mob)
basic<-formula(paste("LogCases ~", paste(vars_basic, sep = "", collapse = "+")))
basic_mob<-lm(data=df_short,basic)
briq<-formula(paste("LogCases ~", paste(c(vars_basic,vars_briq,"ROL"), sep = "", collapse = "+")))
briq_mob<-lm(data=df_short,briq)
hof<-formula(paste("LogCases ~", paste(c(vars_basic,vars_briq,"ROL",vars_hof), sep = "", collapse = "+")))
hof_mob<-lm(data=df_short,hof)
tab_model(basic_mob,briq_mob,hof_mob)
tab_model(lm(data=df_short,LogDeath~Movement))
tab_model(lm(data=df_short,LogCases~Movement))
briq<-formula(paste("LogDeath ~", paste(c(vars_basic,vars_briq,"ROL","Movement"), sep = "", collapse = "+")))
briq_mob<-lm(data=df_short,briq)
tab_model(briq_mob)
tab_model(lm(data=df_short,LogDeath~LongRunCoeff_3))
briq<-formula(paste("LogDeath ~", paste(c(vars_basic,vars_briq,"ROL","LongRunCoeff_3"), sep = "", collapse = "+")))
briq_mob<-lm(data=df_short,briq)
tab_model(briq_mob)
tab_model(lm(data=df_short,LogDeath~SimpleCoef))
briq<-formula(paste("LogDeath ~", paste(c(vars_basic,vars_briq,"ROL","SimpleCoef"), sep = "", collapse = "+")))
briq_mob<-lm(data=df_short,briq)
tab_model(briq_mob)
tab_model(lm(data=w1_short,LogDeath~Movement))
tab_model(lm(data=df_short,LogDeath~Movement))
tab_model(lm(data=w1_short,LogDeath~Movement))
tab_model(lm(data=df_short,LogDeath~Movement))
tab_model(lm(data=w1_short,LogDeath~Movement))
tab_model(lm(data=df_short,LogDeath~Movement))
library(plyr)
library(tidyverse)
source("ImportLong.r")
q<-df%>%
filter(!is.na(Movement),!is.na(StringencyIndex))%>%
group_by(Country)%>%
summarise(SimpleCoef=summary(lm(Movement~StringencyIndex))$coefficients[2,1],
SimpleSE=summary(lm(Movement~StringencyIndex))$coefficients[2,2],
Cor=cor.test(StringencyIndex,Movement)$estimate[[1]])%>%
ungroup()
df<-merge(df,q,by='Country',all=TRUE)
df_avg<-df%>%
#  filter(!is.na(Movement),!is.na(StringencyIndex))%>%
group_by(Country)%>%
summarise_at(vars(-c(total_deaths,total_cases)),mean,na.rn=TRUE)%>%
ungroup()
df_other<-df%>%
group_by(Country)%>%
summarise(total_deaths=last(total_deaths),total_cases=last(total_cases),LogDeath=(log(last(total_deaths)+1)),LogCases=log(last(total_cases)+1),MaxSI=max(StringencyIndex,na.rm=TRUE))%>%
ungroup()
df_short<-merge(df_avg,df_other,by="Country",all=T)
tab_model(lm(data=w1_short,LogDeath~Movement))
tab_model(lm(data=df_short,LogDeath~Movement))
df_short<-merge(df_avg,df_other,by="Country",all=T)
vars_basic<-c("log_GDP_pc","Unemployment","Pop_Density_sq_mi","Age_65up","Death_disease")
vars_briq<-c("risktaking","patience","negrecip","trust","posrecip","altruism")
vars_hof<-c("COL","PDI","MAS","UAI")
summary(df_short$total_cases)
summary(df_short$LogDeath)
lm(data=df_short,LogDeath~Movement)
summary(df_short$Movement)
setwd("C:/Users/fores/OneDrive - The University of Nottingham/GitHub/COVID-19")
library(tidyverse)
library(stringr)
library(lmerTest)
library(stargazer)
library(mfx)
library(knitr)
library(kSamples)
library(FSA)
library(kableExtra)
library(xtable)
library(miceadds)
library(jtools)
library(plm)
library(clubSandwich)
library(ggrepel)
library(sjPlot)
library(sjmisc)
library(sjlabelled)
library(naniar)
library(ggpubr)
library(lubridate)
options("jtools-digits" = 4,scipen=999) # set displayed decimal places to 4
rm(list = ls())
source("ImportLong.r")
q<-df%>%
filter(!is.na(Movement),!is.na(StringencyIndex))%>%
group_by(Country)%>%
summarise(SimpleCoef=summary(lm(Movement~StringencyIndex))$coefficients[2,1],
SimpleSE=summary(lm(Movement~StringencyIndex))$coefficients[2,2],
Cor=cor.test(StringencyIndex,Movement)$estimate[[1]])%>%
ungroup()
df<-merge(df,q,by='Country',all=TRUE)
#breaks<-df%>%
# filter(Popular==1)%>%
#dplyr::select(Country)
df_avg<-df%>%
#  filter(!is.na(Movement),!is.na(StringencyIndex))%>%
group_by(Country)%>%
summarise_at(vars(-c(total_deaths,total_cases)),mean,na.rn=TRUE)%>%
ungroup()
df_other<-df%>%
group_by(Country)%>%
summarise(total_deaths=last(total_deaths),total_cases=last(total_cases),LogDeath=(log(last(total_deaths)+1)),LogCases=log(last(total_cases)+1),MaxSI=max(StringencyIndex,na.rm=TRUE))%>%
ungroup()
df_short<-merge(df_avg,df_other,by="Country",all=T)
tab_model(lm(data=df_short,LogDeath~Movement))
summary(df_short$Movement)
source("ImportLong.r")
summary(df$Movement)
df<-merge(df,q,by='Country',all=TRUE)
summary(df$Movement)
df_avg<-df%>%
#  filter(!is.na(Movement),!is.na(StringencyIndex))%>%
group_by(Country)%>%
summarise_at(vars(-c(total_deaths,total_cases)),mean,na.rn=TRUE)%>%
ungroup()
df_other<-df%>%
group_by(Country)%>%
summarise(total_deaths=last(total_deaths),total_cases=last(total_cases),LogDeath=(log(last(total_deaths)+1)),LogCases=log(last(total_cases)+1),MaxSI=max(StringencyIndex,na.rm=TRUE))%>%
ungroup()
df_short<-merge(df_avg,df_other,by="Country",all=T)
summary(df$Movement)
summary(df_short$Movement)
df_short$Movement
df_avg$Movement
View(df_avg)
source("ImportLong.r")
q<-df%>%
# filter(!is.na(Movement),!is.na(StringencyIndex))%>%
group_by(Country)%>%
summarise(SimpleCoef=summary(lm(Movement~StringencyIndex))$coefficients[2,1],
SimpleSE=summary(lm(Movement~StringencyIndex))$coefficients[2,2],
Cor=cor.test(StringencyIndex,Movement)$estimate[[1]])%>%
ungroup()
q<-df%>%
filter(!is.na(Movement),!is.na(StringencyIndex))%>%
group_by(Country)%>%
summarise(SimpleCoef=summary(lm(Movement~StringencyIndex))$coefficients[2,1],
SimpleSE=summary(lm(Movement~StringencyIndex))$coefficients[2,2],
Cor=cor.test(StringencyIndex,Movement)$estimate[[1]])%>%
ungroup()
df<-merge(df,q,by='Country',all=TRUE)
df_avg<-df%>%
filter(!is.na(Movement),!is.na(StringencyIndex))%>%
group_by(Country)%>%
summarise_at(vars(-c(total_deaths,total_cases)),mean,na.rn=TRUE)%>%
ungroup()
df_avg$Movement
df_other<-df%>%
filter(!is.na(Movement),!is.na(StringencyIndex))%>%
group_by(Country)%>%
summarise(total_deaths=last(total_deaths),total_cases=last(total_cases),LogDeath=(log(last(total_deaths)+1)),LogCases=log(last(total_cases)+1),MaxSI=max(StringencyIndex,na.rm=TRUE))%>%
ungroup()
df_short<-merge(df_avg,df_other,by="Country",all=T)
#Focusing on the first wave only
w1<-df%>%
filter(!is.na(StringencyIndex),!is.na(Movement))%>%
group_by(Country)%>%
mutate(day=row_number())%>%  ###Putting a counter for each row of each group
add_tally()%>% ## creating a variable "n" that counts how many rows each group has.
arrange(Date)%>%
mutate(wave1=if_else(StringencyIndex>=dplyr::lag(StringencyIndex),1,0))%>%
mutate(fir=match(0,wave1)-1)%>% ### first occurence of a 0-value - 1 to discard the 0.
mutate(fir=tidyr::replace_na(fir,n()))%>% ### countries that never had a 0 appear as NA. We replace NAs with total rows of 1's
mutate(wave=ifelse(day<=fir,"first","second"))%>%
filter(wave=="first")%>%
ungroup()%>%
arrange(Country,Date)
#Break up w1 by country, then fit specified model to each piec and return a list
models<-dlply(w1,'Country',function(df)
lm(Movement~StringencyIndex,data=df))
library(plyr)
#Break up w1 by country, then fit specified model to each piec and return a list
models<-dlply(w1,'Country',function(df)
lm(Movement~StringencyIndex,data=df))
#apply coef to each model and return a data frame
wq<-ldply(models,coef)
names(wq)<-c("Country","Intercept","Compliance")
w1_avg<-w1%>%
filter(!is.na(Movement),!is.na(StringencyIndex))%>%
group_by(Country)%>%
dplyr::summarise_at(vars(-c(total_deaths,total_cases)),mean,na.rn=TRUE)%>%
ungroup()
w1_other<-w1%>%
filter(!is.na(Movement),!is.na(StringencyIndex))%>%
group_by(Country)%>%
dplyr::summarise(total_deaths=last(total_deaths),
total_cases=last(total_cases),
LogDeath=log(last(total_deaths)+1),
LogCases=log(last(total_cases)+1),
MaxSI=max(StringencyIndex))
w1_short<-merge(w1_avg,w1_other,by="Country",all=T)
w1_short<-merge(w1_short,wq,by="Country",all=T)
vars_basic<-c("log_GDP_pc","Unemployment","Pop_Density_sq_mi","Age_65up","Death_disease")
vars_briq<-c("risktaking","patience","negrecip","trust","posrecip","altruism")
vars_hof<-c("COL","PDI","MAS","UAI")
tab_model(lm(data=w1_short,LogDeath~Movement))
tab_model(lm(data=df_short,LogDeath~Movement))
tab_model(lm(data=w1_short,LogDeath~Movement))
tab_model(lm(data=df_short,LogDeath~Movement))
tab_model(lm(data=w1_short,LogDeath~Compliance))
briq<-formula(paste("LogDeath ~", paste(c(vars_basic,vars_briq,"ROL","Compliance"), sep = "", collapse = "+")))
briq_mob<-lm(data=w1_short,briq)
tab_model(briq_mob)
briq<-formula(paste("LogDeath ~", paste(c(vars_basic,"ROL","Compliance"), sep = "", collapse = "+")))
briq_mob<-lm(data=w1_short,briq)
tab_model(briq_mob)
briq<-formula(paste("LogCases ~", paste(c(vars_basic,"ROL","Compliance"), sep = "", collapse = "+")))
briq_mob<-lm(data=w1_short,briq)
tab_model(briq_mob)
briq<-formula(paste("LogDeath ~", paste(c(vars_basic,vars_briq,"ROL","Movement"), sep = "", collapse = "+")))
briq_mob<-lm(data=df_short,briq)
tab_model(briq_mob)
tab_model(lm(data=df_short,LogDeath~Movement))
source("ImportLong.r")
source("ImportLong.r")
q<-df%>%
filter(!is.na(Movement),!is.na(StringencyIndex))%>%
group_by(Country)%>%
summarise(SimpleCoef=summary(lm(Movement~StringencyIndex))$coefficients[2,1],
SimpleSE=summary(lm(Movement~StringencyIndex))$coefficients[2,2],
Cor=cor.test(StringencyIndex,Movement)$estimate[[1]])%>%
ungroup()
df<-merge(df,q,by='Country',all=TRUE)
library(plyr)
