library("tidyverse")
install.packages(tidyverse)
install.packages("tidyverse")
library("countrycode")
library("tidyverse")
mobility_long <- read.csv("Global_Mobility_Report.csv")%>%
filter(sub_region_1=="")%>%
mutate(Movement=rowMeans(.[,c("retail_and_recreation_percent_change_from_baseline","grocery_and_pharmacy_percent_change_from_baseline",
"parks_percent_change_from_baseline", "transit_stations_percent_change_from_baseline",
"workplaces_percent_change_from_baseline")],na.rm=T))%>%
mutate(Date=as.Date(date))%>%
mutate(Country=countrycode(country_region_code,'iso2c','country.name')) %>%
mutate(Country=replace(Country, is.na(country_region_code), 'Namibia'))
mobility_short<-mobility_long%>%
filter(Date==as.Date("2020-04-11"))
setwd("C:/Users/lnlro/Dropbox/Research/COVID-19/COVID-19")
mobility_long <- read.csv("Global_Mobility_Report.csv")%>%
filter(sub_region_1=="")%>%
mutate(Movement=rowMeans(.[,c("retail_and_recreation_percent_change_from_baseline","grocery_and_pharmacy_percent_change_from_baseline",
"parks_percent_change_from_baseline", "transit_stations_percent_change_from_baseline",
"workplaces_percent_change_from_baseline")],na.rm=T))%>%
mutate(Date=as.Date(date))%>%
mutate(Country=countrycode(country_region_code,'iso2c','country.name')) %>%
mutate(Country=replace(Country, is.na(country_region_code), 'Namibia'))
mobility_short<-mobility_long%>%
filter(Date==as.Date("2020-04-11"))
#lockdown has been customised so as to take the median Province's attitude.
#The median is calculated by arranging by date of lockdown.
#This approach coerces the US to the lockdown from its median state: N. Hampshire for example.
#If you want to see the lock-down dates per state, see the "CountryLockdowndates.csv" instead.
lockdown<- read.csv("countryLockdowndates_custom.csv") %>%
rename(DateLockDown=Date)%>%
mutate(Lock=ifelse(Type=="None","No","Yes"))%>%
mutate(Country=countrycode(Country,'country.name','country.name'))
days<-read.csv("CovidDeaths.csv")%>%
rename(Country=location)%>%
mutate(Country=countrycode(Country,'country.name','country.name')) %>%
mutate(Date=as.Date(date,format="%d/%m/%y"))%>%
filter(Date!="2020-12-31")%>%
mutate(DeathsBeforeGoogle=case_when(Date=="2020-03-19"~total_deaths))
View(days[which(days$Country == "Timor") ,"Country"])
View(days["Country"])
unique(days$Country)
days<-read.csv("CovidDeaths.csv")%>%
rename(Country=location
)
unique(days$Country)
days<-read.csv("CovidDeaths.csv")%>%
rename(Country=location)%>%
recode(Country,Timor = 'Timor Leste')
days<-read.csv("CovidDeaths.csv")%>%
rename(Country=location)%>%
mutate(Country = replace(Country,Country == "Timor", "Timor Leste"))
days<-read.csv("CovidDeaths.csv")%>%
rename(Country=location)%>%
mutate(Country = recode(Country, "Timor" = "Timor Leste"))
View(days["Country"])
unique(days$Country)
days<-read.csv("CovidDeaths.csv")%>%
rename(Country=location)%>%
mutate(Country = recode(Country, "Timor" = "Timor Leste")) %>%
mutate(Country=countrycode(Country,'country.name','country.name')) %>%
mutate(Date=as.Date(date,format="%d/%m/%y"))%>%
filter(Date!="2020-12-31")%>%
mutate(DeathsBeforeGoogle=case_when(Date=="2020-03-19"~total_deaths))
days_1case<-days[days$new_cases==1,]%>%
group_by(Country)%>%
summarise(Date_1Confirmed=first(Date))
days_1case
days_1case<-days[days$new_cases>=1,]%>%
group_by(Country)%>%
summarise(Date_1Confirmed=first(Date))
days_1death<-days[days$new_deaths>=1,]%>%
group_by(Country)%>%
summarise(Date_1Death=first(Date))
days_1death<-days[days$new_deaths>=1,]%>%
group_by(Country)%>%
summarise(Date_1Death=first(Date))
time_long<-merge(merge(
days,
days_1case,by="Country",all=T),
days_1death,by="Country",all=T)
time_short<-time_long%>%
group_by(Country)%>%
arrange(Country,Date)%>%
summarise(Date_1confirmed=first(Date_1Confirmed),Date_1death=first(Date_1Death),
TotalCases=last(total_cases),TotalDeaths=last(total_deaths),Google=first(na.omit(DeathsBeforeGoogle)))
DaysLock_short<-merge(lockdown,time_short,by="Country",all=T)%>%
mutate(DateLockDown=as.Date(DateLockDown,format="%d/%m/%Y"))%>%
mutate(DaysDuration=ifelse(Type=="None",0,as.Date("29/03/2020",format="%d/%m/%y")-as.Date(DateLockDown)))%>%
mutate(DaysLockDownStart=DateLockDown-as.Date("22/01/2020",format="%d/%m/%Y"))%>%
mutate(Days_LockDown_1case=as.Date("29/03/2020",format="%d/%m/%y")-as.Date(Date_1confirmed,format="%d/%m/%y"))%>%
mutate(Days_LockDown_1death=as.Date("29/03/2020",format="%d/%m/%y")-as.Date(Date_1death,format="%d/%m/%y"))
weather_short<-read.csv("covid_dataset.csv")%>%
rename(Country=Country.Region)%>%
mutate(Country=countrycode(Country,'country.name','country.name')) %>%
mutate(Date=as.Date(Date,format="%d/%m/%y"))%>%
mutate(temperatureBefore=case_when(Date<as.Date("2020-02-23")~temperature))%>%
mutate(temperatureAfter=case_when(Date>=as.Date("2020-02-23")~temperature))%>%
mutate(humidityBefore=case_when(Date<as.Date("2020-02-23")~humidity))%>%
mutate(humidityAfter=case_when(Date>=as.Date("2020-02-23")~humidity))%>%
group_by(Country)%>%
summarise(Temperature=mean(temperature,na.rm=TRUE),
TemperatureBfr=mean(temperatureBefore,na.rm=T),TemperatureAftr=mean(temperatureAfter,na.rm=T),
TemperatureDif=TemperatureAftr-TemperatureBfr,
Humidity=mean(humidity,na.rm=T),
HumidityBfr=mean(humidityBefore,na.rm=TRUE),HumidityAftr=mean(humidityAfter,na.rm=T),
HumidityDif=HumidityAftr-HumidityBfr)%>%
naniar::replace_with_na_at(.vars = c("Temperature","Humidity"),
condition = ~.x == -999)
weather_long<-read.csv("covid_dataset.csv")%>%
rename(Country=Country.Region)%>%
mutate(Country=countrycode(Country,'country.name','country.name')) %>%
mutate(Date=as.Date(Date,format="%d/%m/%y"))%>%
mutate(temperatureBefore=case_when(Date<as.Date("2020-02-23")~temperature))%>%
mutate(temperatureAfter=case_when(Date>=as.Date("2020-02-23")~temperature))%>%
mutate(humidityBefore=case_when(Date<as.Date("2020-02-23")~humidity))%>%
mutate(humidityAfter=case_when(Date>=as.Date("2020-02-23")~humidity))%>%
naniar::replace_with_na_at(.vars = c("Temperature","Humidity"),
condition = ~.x == -999)%>%
group_by(Country,Date)%>%
summarise(Temperature=mean(temperature,na.rm=TRUE),
TemperatureBfr=mean(temperatureBefore,na.rm=T),TemperatureAftr=mean(temperatureAfter,na.rm=T),
Humidity=mean(humidity,na.rm=T),
HumidityBfr=mean(humidityBefore,na.rm=TRUE),HumidityAftr=mean(humidityAfter,na.rm=T))
mobility_weather_death<-merge(merge(
mobility_long,
weather_long,by=c("Country","Date"),all=T),
time_long,by=c("Country","Date"),all=T)
wvs<-read.csv("WVS_per_Country.csv")%>%
#filter(Wave==6)%>%
dplyr::select(Country,E235,E236,E124,E229,Wave)%>%
mutate(Country=countrycode(Country,'country.name','country.name')) %>%
rename(Democracy=E235,Democraticness=E236,Civil=E124,Opression=E229)%>%
group_by(Country)%>%
filter(Wave==max(Wave)) #I keep the values for each country with the most recent available wave
rol<-read.csv("RuleOfLaw2018.csv")%>%
mutate(Country=Country.Name,ROL=as.numeric(levels(X2018..YR2018.))[X2018..YR2018.])%>%
mutate(Country=countrycode(Country,'country.name','country.name')) %>%
dplyr::select(Country,Country.Code,ROL)%>%
mutate(Country.Code=recode_factor(Country.Code,
'ROM'="ROU"))
wb<-read.csv("WorldBank.csv")%>%
mutate(Country=countrycode(Country.Code,'wb','country.name'))%>%
mutate(log_GDP_pc=log(GDP_pc))
wb<-merge(wb,read.csv("WB_hosp_bed.csv"),by="Country.Code",all=T)
polityIV <- read.csv("polity4_v2018.csv")%>%
filter(year == 2018) %>%
mutate(Country=countrycode(scode,'p4c','country.name')) %>%
dplyr::select('Country','polity2')
UNpop <- read.csv("UN-Population/population_division_UN_Houseshold_Size_and_Composition_2019.csv") %>%
rename(Country = ï..Country) %>%
mutate(Country = countrycode(Country,"country.name","country.name"))
mutate(Country = recode("RÃ©union" = "Reunion", "Saint-BarthÃ©lemy" = "Saint-Bartholomy") %>%
UNpop <- read.csv("UN-Population/population_division_UN_Houseshold_Size_and_Composition_2019.csv") %>%
rename(Country = ï..Country) %>%
mutate(Country = recode("RÃ©union" = "Reunion", "Saint-BarthÃ©lemy" = "Saint-Bartholomy")) %>%
mutate(Country = countrycode(Country,"country.name","country.name"))
UNpop <- read.csv("UN-Population/population_division_UN_Houseshold_Size_and_Composition_2019.csv") %>%
rename(Country = ï..Country) %>%
mutate(Country = recode("RÃ©union" = "Reunion", "Saint-BarthÃ©lemy" = "Saint-Bartholomy")) %>%
mutate(Country = countrycode(Country,"country.name","country.name"))
UNpop <- read.csv("UN-Population/population_division_UN_Houseshold_Size_and_Composition_2019.csv") %>%
rename(Country = ï..Country) %>%
mutate(Country = recode(Country, "RÃ©union" = "Reunion", "Saint-BarthÃ©lemy" = "Saint-Bartholomy")) %>%
mutate(Country = countrycode(Country,"country.name","country.name"))
UNpop <- read.csv("UN-Population/population_division_UN_Houseshold_Size_and_Composition_2019.csv") %>%
rename(Country = ï..Country) %>%
mutate(Country = recode(Country, "RÃ©union" = "Reunion", "Saint-BarthÃ©lemy" = "Saint-Bartholomy")) %>%
mutate(Country = countrycode(Country,"country.name","country.name"))
UNpop <- read.csv("UN-Population/population_division_UN_Houseshold_Size_and_Composition_2019.csv") %>%
rename(Country = ï..Country) %>%
mutate(Country = recode(Country, "RÃ©union" = "Reunion", "Saint-BarthÃ©lemy" = "Saint-Barthelemy")) %>%
mutate(Country = countrycode(Country,"country.name","country.name"))
unique(UNpop$Country)
elections<-read.csv("DPI2017_basefile_Jan2018.csv")%>%
mutate(Country=countrycode(ifs,'wb','country.name')) %>%
#mutate(ifs="Country.Code")%>%
arrange(Country,year)%>%
group_by(Country)%>%
summarise(ElectionYear=last(year),ElectionWin=last(percent1),Country.Code=first(ifs))%>%
naniar::replace_with_na_at(.vars = c("ElectionYear","ElectionWin","Country.Code"),
condition = ~.x == -999)%>%
drop_na()
`%notin%` <- Negate(`%in%`)
elections<-read.csv("DPI2017_basefile_Jan2018.csv")%>%
mutate(ifs, recode(ifs, "ROM" = "ROU", "TMP" = "TLS", "ZAR" = "COD")) %>%
filter(ifs %notin% c("CSK", "DDR", "SUN", "YMD", "YSR"))
elections<-read.csv("DPI2017_basefile_Jan2018.csv")%>%
mutate(ifs, recode(ifs, "ROM" = "ROU", "TMP" = "TLS", "ZAR" = "COD")) %>%
filter(ifs %notin% c("CSK", "DDR", "SUN", "YMD", "YSR")) %>%
mutate(Country=countrycode(ifs,'wb','country.name')) %>%
arrange(Country,year)%>%
group_by(Country)%>%
summarise(ElectionYear=last(year),ElectionWin=last(percent1),Country.Code=first(ifs))%>%
naniar::replace_with_na_at(.vars = c("ElectionYear","ElectionWin","Country.Code"),
condition = ~.x == -999)%>%
drop_na()
elections<-read.csv("DPI2017_basefile_Jan2018.csv")%>%
mutate(ifs, recode(ifs, "ROM" = "ROU", "TMP" = "TLS", "ZAR" = "COD"))
unique(elections$ifs)
elections<-read.csv("DPI2017_basefile_Jan2018.csv") %>%
mutate(ifs = recode(ifs, "ROM" = "ROU", "TMP" = "TLS", "ZAR" = "COD"))
unique(elections$ifs)
elections<-read.csv("DPI2017_basefile_Jan2018.csv") %>%
mutate(ifs = recode(ifs, "ROM" = "ROU", "TMP" = "TLS", "ZAR" = "COD")) %>%
filter(ifs %notin% c("CSK", "DDR", "SUN", "YMD", "YSR")) %>%
mutate(Country=countrycode(ifs,'wb','country.name')) %>%
arrange(Country,year) %>%
group_by(Country)%>%
summarise(ElectionYear=last(year),ElectionWin=last(percent1),Country.Code=first(ifs))%>%
naniar::replace_with_na_at(.vars = c("ElectionYear","ElectionWin","Country.Code"),
condition = ~.x == -999)%>%
drop_na()
elections<-read.csv("DPI2017_basefile_Jan2018.csv") %>%
mutate(ifs = recode(ifs, "ROM" = "ROU", "TMP" = "TLS", "ZAR" = "COD")) %>%
filter(ifs %notin% c("CSK", "DDR", "SUN", "YMD", "YSR", "0")) %>%
mutate(Country=countrycode(ifs,'wb','country.name')) %>%
arrange(Country,year) %>%
group_by(Country)%>%
summarise(ElectionYear=last(year),ElectionWin=last(percent1),Country.Code=first(ifs))%>%
naniar::replace_with_na_at(.vars = c("ElectionYear","ElectionWin","Country.Code"),
condition = ~.x == -999)%>%
drop_na()
elections<-read.csv("DPI2017_basefile_Jan2018.csv") %>%
mutate(ifs = recode(ifs, "ROM" = "ROU", "TMP" = "TLS", "ZAR" = "COD")) %>%
filter(ifs %notin% c("CSK", "DDR", "SUN", "YMD", "YSR", "0", "")) %>%
mutate(Country=countrycode(ifs,'wb','country.name')) %>%
arrange(Country,year) %>%
group_by(Country)%>%
summarise(ElectionYear=last(year),ElectionWin=last(percent1),Country.Code=first(ifs))%>%
naniar::replace_with_na_at(.vars = c("ElectionYear","ElectionWin","Country.Code"),
condition = ~.x == -999)%>%
drop_na()
social_prefs<-read.csv("socialprefs.csv")%>%
rename(Country=country)%>%
mutate(Country=countrycode(Country,"country.name","country.name"))
countries<-read.csv("countries_custom.csv")%>%
#naniar::replace_with_na_at(.vars!=c("Population","Service"),condition = ~.x == -999.000)%>%
na_if(.,-999)%>%
mutate(Country=trimws(Country))%>%
#mutate_at(vars(Population:Service),funs(as.numeric))%>%
mutate(Country=countrycode(Country,"country.name","country.name"))
countries<-read.csv("countries_custom.csv")%>%
#naniar::replace_with_na_at(.vars!=c("Population","Service"),condition = ~.x == -999.000)%>%
na_if(.,-999)%>%
#mutate_at(vars(Population:Service),funs(as.numeric))%>%
mutate(Country=countrycode(Country,"country.name","country.name"))
countries<-read.csv("countries_custom.csv")%>%
#naniar::replace_with_na_at(.vars!=c("Population","Service"),condition = ~.x == -999.000)%>%
na_if(.,-999)%>%
mutate(Country = recode(Country, "Central African Rep." = "Central African Republic", "Virgin Islands" = "U.S. Virgin Islands")) %>%
mutate(Country=countrycode(Country,"country.name","country.name"))
countries<-read.csv("countries_custom.csv")%>%
#naniar::replace_with_na_at(.vars!=c("Population","Service"),condition = ~.x == -999.000)%>%
na_if(.,-999)%>%
mutate(Country = recode(Country, "Central African Rep. " = "Central African Republic", "Virgin Islands " = "U.S. Virgin Islands")) %>%
mutate(Country=countrycode(Country,"country.name","country.name"))
df_short <- merge(merge(merge(merge(merge(merge(merge(merge(merge(merge(
mobility_short,
DaysLock_short,by="Country",all=T),
wvs,by="Country",all=T),
weather_short,by="Country",all=T),
wb,by="Country",all=T),
elections,by="Country",all=T),
rol,by="Country",all=T),
social_prefs,by="Country",all=T),
countries,by="Country",all=T),
polityIV, by="Country",all=T),
UNpop, by="Country",all=T)
df_long<-merge(merge(merge(merge(merge(merge(merge(merge(merge(merge(
mobility_weather_death,
lockdown,by="Country",all=T),
wvs,by="Country",all=T),
wb,by="Country",all=T),
elections,by="Country",all=T),
rol,by="Country",all=T),
social_prefs,by="Country",all=T),
countries,by="Country",all=T),
time_short,by="Country",all=T),
polityIV,by="Country",all=T),
UNpop,by="Country",all=T)
df_short$Death_pc<-df_short$TotalDeaths/df_short$Population
df_short$Confirmed_pc<-df_short$TotalCases/df_short$Population
df2<-subset(df_short,df_short$Province!="Faroe Islands")
df2$Log_Death_pc<-ifelse(df2$Death_pc>0,log(df2$Death_pc),NA)
df2$Google_pc<-df2$Google/df2$Population
df2$Log_Google_pc<-ifelse(df2$Google_pc>0,log(df2$Google_pc),NA)
write.csv(df2,"30042020_short.csv")
df_long<-merge(merge(merge(merge(merge(merge(merge(merge(merge(merge(
mobility_weather_death,
lockdown,by="Country",all=T),
wvs,by="Country",all=T),
wb,by="Country",all=T),
elections,by="Country",all=T),
rol,by="Country",all=T),
social_prefs,by="Country",all=T),
countries,by="Country",all=T),
time_short,by="Country",all=T),
polityIV,by="Country",all=T),
UNpop,by="Country",all=T)
df_long$Death_pc<-df_long$total_deaths/df_long$Population
df_long$Confirmed_pc<-df_long$total_cases/df_long$Population
df3<-subset(df_long,df_long$Province!="Faroe Islands")
df3$Log_Death_pc<-ifelse(df3$Death_pc>0,log(df3$Death_pc),NA)
df3$Google_pc<-df3$DeathsBeforeGoogle/df3$Population
df3$Log_Google_pc<-ifelse(df3$Google_pc>0,log(df3$Google_pc),NA)
write.csv(df3,"30042020_long.csv")
